/**
 * Sofia Api
 * Api principal do sistema Sofia.
 *
 * The version of the OpenAPI document: 1.0.10
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import type { RequestArgs } from './base';
import { BaseAPI } from './base';
/**
 *
 * @export
 * @interface AssignCategoryForBankTransactionsPageRequestDto
 */
export interface AssignCategoryForBankTransactionsPageRequestDto {
    /**
     *
     * @type {string}
     * @memberof AssignCategoryForBankTransactionsPageRequestDto
     */
    'syncItemId': string;
    /**
     *
     * @type {number}
     * @memberof AssignCategoryForBankTransactionsPageRequestDto
     */
    'pageNumber': number;
    /**
     *
     * @type {SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPage}
     * @memberof AssignCategoryForBankTransactionsPageRequestDto
     */
    'bankProviderTransactionsPage': SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPage;
    /**
     *
     * @type {Array<SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInner>}
     * @memberof AssignCategoryForBankTransactionsPageRequestDto
     */
    'legalNatureAssignRequests': Array<SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInner>;
}
/**
 *
 * @export
 * @interface AssignLegalNatureForBankTransactionsPageRequestDto
 */
export interface AssignLegalNatureForBankTransactionsPageRequestDto {
    /**
     *
     * @type {string}
     * @memberof AssignLegalNatureForBankTransactionsPageRequestDto
     */
    'syncItemId': string;
    /**
     *
     * @type {number}
     * @memberof AssignLegalNatureForBankTransactionsPageRequestDto
     */
    'pageNumber': number;
    /**
     *
     * @type {SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPage}
     * @memberof AssignLegalNatureForBankTransactionsPageRequestDto
     */
    'bankProviderTransactionsPage': SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPage;
}
/**
 *
 * @export
 * @interface BalancePointResultEntity
 */
export interface BalancePointResultEntity {
    /**
     *
     * @type {number}
     * @memberof BalancePointResultEntity
     */
    'amountInCents'?: number;
}
/**
 *
 * @export
 * @interface BankAccountEntity
 */
export interface BankAccountEntity {
    /**
     *
     * @type {string}
     * @memberof BankAccountEntity
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof BankAccountEntity
     */
    'bankConnectionId': string;
    /**
     *
     * @type {BankTransactionEntityAccountBankConnection}
     * @memberof BankAccountEntity
     */
    'bankConnection': BankTransactionEntityAccountBankConnection;
    /**
     *
     * @type {string}
     * @memberof BankAccountEntity
     */
    'provider': BankAccountEntityProviderEnum;
    /**
     *
     * @type {string}
     * @memberof BankAccountEntity
     */
    'providerAccountId': string;
    /**
     *
     * @type {string}
     * @memberof BankAccountEntity
     */
    'type': BankAccountEntityTypeEnum;
    /**
     *
     * @type {boolean}
     * @memberof BankAccountEntity
     */
    'enabled': boolean;
    /**
     *
     * @type {string}
     * @memberof BankAccountEntity
     */
    'number': string;
    /**
     *
     * @type {number}
     * @memberof BankAccountEntity
     */
    'balance': number;
    /**
     *
     * @type {string}
     * @memberof BankAccountEntity
     */
    'currencyCode': string;
    /**
     *
     * @type {string}
     * @memberof BankAccountEntity
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof BankAccountEntity
     */
    'createdAt': string;
    /**
     *
     * @type {string}
     * @memberof BankAccountEntity
     */
    'updatedAt': string;
}
export declare const BankAccountEntityProviderEnum: {
    readonly Pluggy: "PLUGGY";
    readonly Sofia: "SOFIA";
};
export type BankAccountEntityProviderEnum = typeof BankAccountEntityProviderEnum[keyof typeof BankAccountEntityProviderEnum];
export declare const BankAccountEntityTypeEnum: {
    readonly Checking: "CHECKING";
    readonly Savings: "SAVINGS";
    readonly CreditCard: "CREDIT_CARD";
};
export type BankAccountEntityTypeEnum = typeof BankAccountEntityTypeEnum[keyof typeof BankAccountEntityTypeEnum];
/**
 *
 * @export
 * @interface BankAccountsBalanceReportEntity
 */
export interface BankAccountsBalanceReportEntity {
    /**
     *
     * @type {Array<BankAccountsBalanceReportEntityItemsInner>}
     * @memberof BankAccountsBalanceReportEntity
     */
    'items': Array<BankAccountsBalanceReportEntityItemsInner>;
    /**
     *
     * @type {Array<BankTransactionEntityAccount>}
     * @memberof BankAccountsBalanceReportEntity
     */
    'bankAccounts': Array<BankTransactionEntityAccount>;
}
/**
 *
 * @export
 * @interface BankAccountsBalanceReportEntityItemsInner
 */
export interface BankAccountsBalanceReportEntityItemsInner {
    /**
     *
     * @type {number}
     * @memberof BankAccountsBalanceReportEntityItemsInner
     */
    'totalBalance': number;
    /**
     *
     * @type {string}
     * @memberof BankAccountsBalanceReportEntityItemsInner
     */
    'currencyCode': string;
}
/**
 *
 * @export
 * @interface BankConnectionEntity
 */
export interface BankConnectionEntity {
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntity
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntity
     */
    'createdByUserId': string;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntity
     */
    'workspaceId': string;
    /**
     *
     * @type {Array<BankConnectionEntityAccountsInner>}
     * @memberof BankConnectionEntity
     */
    'accounts'?: Array<BankConnectionEntityAccountsInner> | null;
    /**
     *
     * @type {boolean}
     * @memberof BankConnectionEntity
     */
    'enabled': boolean;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntity
     */
    'provider': BankConnectionEntityProviderEnum;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntity
     */
    'providerItemId': string;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntity
     */
    'historyRange': BankConnectionEntityHistoryRangeEnum;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntity
     */
    'connectorId': string;
    /**
     *
     * @type {BankConnectionEntityConnector}
     * @memberof BankConnectionEntity
     */
    'connector'?: BankConnectionEntityConnector | null;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntity
     */
    'createdAt': string;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntity
     */
    'updatedAt': string;
}
export declare const BankConnectionEntityProviderEnum: {
    readonly Pluggy: "PLUGGY";
    readonly Sofia: "SOFIA";
};
export type BankConnectionEntityProviderEnum = typeof BankConnectionEntityProviderEnum[keyof typeof BankConnectionEntityProviderEnum];
export declare const BankConnectionEntityHistoryRangeEnum: {
    readonly OneDay: "ONE_DAY";
    readonly OneWeek: "ONE_WEEK";
    readonly OneMonth: "ONE_MONTH";
    readonly TwoMonths: "TWO_MONTHS";
    readonly ThreeMonths: "THREE_MONTHS";
    readonly SixMonths: "SIX_MONTHS";
    readonly OneYear: "ONE_YEAR";
};
export type BankConnectionEntityHistoryRangeEnum = typeof BankConnectionEntityHistoryRangeEnum[keyof typeof BankConnectionEntityHistoryRangeEnum];
/**
 *
 * @export
 * @interface BankConnectionEntityAccountsInner
 */
export interface BankConnectionEntityAccountsInner {
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityAccountsInner
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityAccountsInner
     */
    'bankConnectionId': string;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityAccountsInner
     */
    'provider': BankConnectionEntityAccountsInnerProviderEnum;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityAccountsInner
     */
    'providerAccountId': string;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityAccountsInner
     */
    'type': BankConnectionEntityAccountsInnerTypeEnum;
    /**
     *
     * @type {boolean}
     * @memberof BankConnectionEntityAccountsInner
     */
    'enabled': boolean;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityAccountsInner
     */
    'number': string;
    /**
     *
     * @type {number}
     * @memberof BankConnectionEntityAccountsInner
     */
    'balance': number;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityAccountsInner
     */
    'currencyCode': string;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityAccountsInner
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityAccountsInner
     */
    'createdAt': string;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityAccountsInner
     */
    'updatedAt': string;
}
export declare const BankConnectionEntityAccountsInnerProviderEnum: {
    readonly Pluggy: "PLUGGY";
    readonly Sofia: "SOFIA";
};
export type BankConnectionEntityAccountsInnerProviderEnum = typeof BankConnectionEntityAccountsInnerProviderEnum[keyof typeof BankConnectionEntityAccountsInnerProviderEnum];
export declare const BankConnectionEntityAccountsInnerTypeEnum: {
    readonly Checking: "CHECKING";
    readonly Savings: "SAVINGS";
    readonly CreditCard: "CREDIT_CARD";
};
export type BankConnectionEntityAccountsInnerTypeEnum = typeof BankConnectionEntityAccountsInnerTypeEnum[keyof typeof BankConnectionEntityAccountsInnerTypeEnum];
/**
 *
 * @export
 * @interface BankConnectionEntityConnector
 */
export interface BankConnectionEntityConnector {
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityConnector
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityConnector
     */
    'provider': BankConnectionEntityConnectorProviderEnum;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityConnector
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityConnector
     */
    'institutionUrl': string;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityConnector
     */
    'imageUrl': string;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityConnector
     */
    'primaryColor': string;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityConnector
     */
    'type': BankConnectionEntityConnectorTypeEnum;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityConnector
     */
    'country': string;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityConnector
     */
    'createdAt': string;
    /**
     *
     * @type {string}
     * @memberof BankConnectionEntityConnector
     */
    'updatedAt': string;
}
export declare const BankConnectionEntityConnectorProviderEnum: {
    readonly Pluggy: "PLUGGY";
    readonly Sofia: "SOFIA";
};
export type BankConnectionEntityConnectorProviderEnum = typeof BankConnectionEntityConnectorProviderEnum[keyof typeof BankConnectionEntityConnectorProviderEnum];
export declare const BankConnectionEntityConnectorTypeEnum: {
    readonly PersonalBank: "PERSONAL_BANK";
    readonly BusinessBank: "BUSINESS_BANK";
    readonly Investment: "INVESTMENT";
    readonly DigitalEconomy: "DIGITAL_ECONOMY";
    readonly Other: "OTHER";
};
export type BankConnectionEntityConnectorTypeEnum = typeof BankConnectionEntityConnectorTypeEnum[keyof typeof BankConnectionEntityConnectorTypeEnum];
/**
 *
 * @export
 * @interface BankTransactionCategoryEntity
 */
export interface BankTransactionCategoryEntity {
    /**
     *
     * @type {string}
     * @memberof BankTransactionCategoryEntity
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionCategoryEntity
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionCategoryEntity
     */
    'directionNature': BankTransactionCategoryEntityDirectionNatureEnum;
    /**
     *
     * @type {string}
     * @memberof BankTransactionCategoryEntity
     */
    'parentId'?: string | null;
    /**
     *
     * @type {Array<BankTransactionCategoryEntityChildrenInner>}
     * @memberof BankTransactionCategoryEntity
     */
    'children': Array<BankTransactionCategoryEntityChildrenInner>;
}
export declare const BankTransactionCategoryEntityDirectionNatureEnum: {
    readonly Credit: "CREDIT";
    readonly Debit: "DEBIT";
    readonly Undefined: "UNDEFINED";
};
export type BankTransactionCategoryEntityDirectionNatureEnum = typeof BankTransactionCategoryEntityDirectionNatureEnum[keyof typeof BankTransactionCategoryEntityDirectionNatureEnum];
/**
 *
 * @export
 * @interface BankTransactionCategoryEntityChildrenInner
 */
export interface BankTransactionCategoryEntityChildrenInner {
    /**
     *
     * @type {string}
     * @memberof BankTransactionCategoryEntityChildrenInner
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionCategoryEntityChildrenInner
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionCategoryEntityChildrenInner
     */
    'directionNature': BankTransactionCategoryEntityChildrenInnerDirectionNatureEnum;
    /**
     *
     * @type {string}
     * @memberof BankTransactionCategoryEntityChildrenInner
     */
    'parentId'?: string | null;
}
export declare const BankTransactionCategoryEntityChildrenInnerDirectionNatureEnum: {
    readonly Credit: "CREDIT";
    readonly Debit: "DEBIT";
    readonly Undefined: "UNDEFINED";
};
export type BankTransactionCategoryEntityChildrenInnerDirectionNatureEnum = typeof BankTransactionCategoryEntityChildrenInnerDirectionNatureEnum[keyof typeof BankTransactionCategoryEntityChildrenInnerDirectionNatureEnum];
/**
 *
 * @export
 * @interface BankTransactionEntity
 */
export interface BankTransactionEntity {
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'accountId': string;
    /**
     *
     * @type {BankTransactionEntityAccount}
     * @memberof BankTransactionEntity
     */
    'account': BankTransactionEntityAccount;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'workspaceId': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'provider': BankTransactionEntityProviderEnum;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'providerTransactionId': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'originalDescription': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'description': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'postedDate': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'competencyDate': string;
    /**
     *
     * @type {number}
     * @memberof BankTransactionEntity
     */
    'amount': number;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'directionNature': BankTransactionEntityDirectionNatureEnum;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'status': BankTransactionEntityStatusEnum;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'legalNature': BankTransactionEntityLegalNatureEnum;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'providerCategoryId'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'providerCategoryName'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'categoryId'?: string | null;
    /**
     *
     * @type {BankTransactionEntityCategory}
     * @memberof BankTransactionEntity
     */
    'category'?: BankTransactionEntityCategory | null;
    /**
     *
     * @type {Array<BankTransactionEntityTagsInner>}
     * @memberof BankTransactionEntity
     */
    'tags': Array<BankTransactionEntityTagsInner>;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'paymentDataId'?: string | null;
    /**
     *
     * @type {BankTransactionEntityPaymentData}
     * @memberof BankTransactionEntity
     */
    'paymentData'?: BankTransactionEntityPaymentData | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'creditCardMetadataId'?: string | null;
    /**
     *
     * @type {BankTransactionEntityCreditCardMetadata}
     * @memberof BankTransactionEntity
     */
    'creditCardMetadata'?: BankTransactionEntityCreditCardMetadata | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'ignoredAt'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'verifiedAt'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'createdAt': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntity
     */
    'updatedAt': string;
}
export declare const BankTransactionEntityProviderEnum: {
    readonly Pluggy: "PLUGGY";
    readonly Sofia: "SOFIA";
};
export type BankTransactionEntityProviderEnum = typeof BankTransactionEntityProviderEnum[keyof typeof BankTransactionEntityProviderEnum];
export declare const BankTransactionEntityDirectionNatureEnum: {
    readonly Credit: "CREDIT";
    readonly Debit: "DEBIT";
    readonly Undefined: "UNDEFINED";
};
export type BankTransactionEntityDirectionNatureEnum = typeof BankTransactionEntityDirectionNatureEnum[keyof typeof BankTransactionEntityDirectionNatureEnum];
export declare const BankTransactionEntityStatusEnum: {
    readonly Pending: "PENDING";
    readonly Posted: "POSTED";
};
export type BankTransactionEntityStatusEnum = typeof BankTransactionEntityStatusEnum[keyof typeof BankTransactionEntityStatusEnum];
export declare const BankTransactionEntityLegalNatureEnum: {
    readonly Personal: "PERSONAL";
    readonly Business: "BUSINESS";
    readonly Undefined: "UNDEFINED";
};
export type BankTransactionEntityLegalNatureEnum = typeof BankTransactionEntityLegalNatureEnum[keyof typeof BankTransactionEntityLegalNatureEnum];
/**
 *
 * @export
 * @interface BankTransactionEntityAccount
 */
export interface BankTransactionEntityAccount {
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityAccount
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityAccount
     */
    'bankConnectionId': string;
    /**
     *
     * @type {BankTransactionEntityAccountBankConnection}
     * @memberof BankTransactionEntityAccount
     */
    'bankConnection': BankTransactionEntityAccountBankConnection;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityAccount
     */
    'provider': BankTransactionEntityAccountProviderEnum;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityAccount
     */
    'providerAccountId': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityAccount
     */
    'type': BankTransactionEntityAccountTypeEnum;
    /**
     *
     * @type {boolean}
     * @memberof BankTransactionEntityAccount
     */
    'enabled': boolean;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityAccount
     */
    'number': string;
    /**
     *
     * @type {number}
     * @memberof BankTransactionEntityAccount
     */
    'balance': number;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityAccount
     */
    'currencyCode': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityAccount
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityAccount
     */
    'createdAt': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityAccount
     */
    'updatedAt': string;
}
export declare const BankTransactionEntityAccountProviderEnum: {
    readonly Pluggy: "PLUGGY";
    readonly Sofia: "SOFIA";
};
export type BankTransactionEntityAccountProviderEnum = typeof BankTransactionEntityAccountProviderEnum[keyof typeof BankTransactionEntityAccountProviderEnum];
export declare const BankTransactionEntityAccountTypeEnum: {
    readonly Checking: "CHECKING";
    readonly Savings: "SAVINGS";
    readonly CreditCard: "CREDIT_CARD";
};
export type BankTransactionEntityAccountTypeEnum = typeof BankTransactionEntityAccountTypeEnum[keyof typeof BankTransactionEntityAccountTypeEnum];
/**
 *
 * @export
 * @interface BankTransactionEntityAccountBankConnection
 */
export interface BankTransactionEntityAccountBankConnection {
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityAccountBankConnection
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityAccountBankConnection
     */
    'createdByUserId': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityAccountBankConnection
     */
    'workspaceId': string;
    /**
     *
     * @type {boolean}
     * @memberof BankTransactionEntityAccountBankConnection
     */
    'enabled': boolean;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityAccountBankConnection
     */
    'provider': BankTransactionEntityAccountBankConnectionProviderEnum;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityAccountBankConnection
     */
    'providerItemId': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityAccountBankConnection
     */
    'historyRange': BankTransactionEntityAccountBankConnectionHistoryRangeEnum;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityAccountBankConnection
     */
    'connectorId': string;
    /**
     *
     * @type {BankConnectionEntityConnector}
     * @memberof BankTransactionEntityAccountBankConnection
     */
    'connector'?: BankConnectionEntityConnector | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityAccountBankConnection
     */
    'createdAt': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityAccountBankConnection
     */
    'updatedAt': string;
}
export declare const BankTransactionEntityAccountBankConnectionProviderEnum: {
    readonly Pluggy: "PLUGGY";
    readonly Sofia: "SOFIA";
};
export type BankTransactionEntityAccountBankConnectionProviderEnum = typeof BankTransactionEntityAccountBankConnectionProviderEnum[keyof typeof BankTransactionEntityAccountBankConnectionProviderEnum];
export declare const BankTransactionEntityAccountBankConnectionHistoryRangeEnum: {
    readonly OneDay: "ONE_DAY";
    readonly OneWeek: "ONE_WEEK";
    readonly OneMonth: "ONE_MONTH";
    readonly TwoMonths: "TWO_MONTHS";
    readonly ThreeMonths: "THREE_MONTHS";
    readonly SixMonths: "SIX_MONTHS";
    readonly OneYear: "ONE_YEAR";
};
export type BankTransactionEntityAccountBankConnectionHistoryRangeEnum = typeof BankTransactionEntityAccountBankConnectionHistoryRangeEnum[keyof typeof BankTransactionEntityAccountBankConnectionHistoryRangeEnum];
/**
 *
 * @export
 * @interface BankTransactionEntityCategory
 */
export interface BankTransactionEntityCategory {
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityCategory
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityCategory
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityCategory
     */
    'directionNature': BankTransactionEntityCategoryDirectionNatureEnum;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityCategory
     */
    'parentId'?: string | null;
}
export declare const BankTransactionEntityCategoryDirectionNatureEnum: {
    readonly Credit: "CREDIT";
    readonly Debit: "DEBIT";
    readonly Undefined: "UNDEFINED";
};
export type BankTransactionEntityCategoryDirectionNatureEnum = typeof BankTransactionEntityCategoryDirectionNatureEnum[keyof typeof BankTransactionEntityCategoryDirectionNatureEnum];
/**
 *
 * @export
 * @interface BankTransactionEntityCreditCardMetadata
 */
export interface BankTransactionEntityCreditCardMetadata {
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityCreditCardMetadata
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityCreditCardMetadata
     */
    'transactionId': string;
    /**
     *
     * @type {number}
     * @memberof BankTransactionEntityCreditCardMetadata
     */
    'installmentNumber'?: number | null;
    /**
     *
     * @type {number}
     * @memberof BankTransactionEntityCreditCardMetadata
     */
    'totalInstallments'?: number | null;
    /**
     *
     * @type {number}
     * @memberof BankTransactionEntityCreditCardMetadata
     */
    'totalAmount'?: number | null;
    /**
     *
     * @type {number}
     * @memberof BankTransactionEntityCreditCardMetadata
     */
    'payeeMCC'?: number | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityCreditCardMetadata
     */
    'cardNumber'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityCreditCardMetadata
     */
    'billId'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityCreditCardMetadata
     */
    'createdAt': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityCreditCardMetadata
     */
    'updatedAt': string;
}
/**
 *
 * @export
 * @interface BankTransactionEntityPaymentData
 */
export interface BankTransactionEntityPaymentData {
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'transactionId': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'payerName'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'payerBranchNumber'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'payerAccountNumber'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'payerRoutingNumber'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'payerRoutingNumberISPB'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'payerDocumentNumberType'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'payerDocumentNumberValue'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'reason'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'receiverName'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'receiverBranchNumber'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'receiverAccountNumber'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'receiverRoutingNumber'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'receiverRoutingNumberISPB'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'receiverDocumentNumberType'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'receiverDocumentNumberValue'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'paymentMethod'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'referenceNumber'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'receiverReferenceId'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'createdAt': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityPaymentData
     */
    'updatedAt': string;
}
/**
 *
 * @export
 * @interface BankTransactionEntityTagsInner
 */
export interface BankTransactionEntityTagsInner {
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityTagsInner
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityTagsInner
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityTagsInner
     */
    'createdAt': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionEntityTagsInner
     */
    'updatedAt': string;
}
/**
 *
 * @export
 * @interface BankTransactionIndicatorEntity
 */
export interface BankTransactionIndicatorEntity {
    /**
     *
     * @type {string}
     * @memberof BankTransactionIndicatorEntity
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionIndicatorEntity
     */
    'prettyId': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionIndicatorEntity
     */
    'type': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionIndicatorEntity
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionIndicatorEntity
     */
    'description': string;
    /**
     *
     * @type {object}
     * @memberof BankTransactionIndicatorEntity
     */
    'data': object;
    /**
     *
     * @type {DreLineOutcomeResultEntity}
     * @memberof BankTransactionIndicatorEntity
     */
    'dreLineOutcomeResult'?: DreLineOutcomeResultEntity;
    /**
     *
     * @type {BalancePointResultEntity}
     * @memberof BankTransactionIndicatorEntity
     */
    'balancePointResult'?: BalancePointResultEntity;
    /**
     *
     * @type {MeanResultEntity}
     * @memberof BankTransactionIndicatorEntity
     */
    'meanResult'?: MeanResultEntity;
    /**
     *
     * @type {ProportionResultEntity}
     * @memberof BankTransactionIndicatorEntity
     */
    'proportionResult'?: ProportionResultEntity;
}
/**
 *
 * @export
 * @interface BankTransactionTagEntity
 */
export interface BankTransactionTagEntity {
    /**
     *
     * @type {string}
     * @memberof BankTransactionTagEntity
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionTagEntity
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionTagEntity
     */
    'createdAt': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionTagEntity
     */
    'updatedAt': string;
}
/**
 *
 * @export
 * @interface BankTransactionsPageEntity
 */
export interface BankTransactionsPageEntity {
    /**
     *
     * @type {number}
     * @memberof BankTransactionsPageEntity
     */
    'pageIndex': number;
    /**
     *
     * @type {number}
     * @memberof BankTransactionsPageEntity
     */
    'pageSize': number;
    /**
     *
     * @type {number}
     * @memberof BankTransactionsPageEntity
     */
    'totalItems': number;
    /**
     *
     * @type {number}
     * @memberof BankTransactionsPageEntity
     */
    'totalPages': number;
    /**
     *
     * @type {Array<BankTransactionsPageEntityItemsInner>}
     * @memberof BankTransactionsPageEntity
     */
    'items': Array<BankTransactionsPageEntityItemsInner>;
}
/**
 *
 * @export
 * @interface BankTransactionsPageEntityItemsInner
 */
export interface BankTransactionsPageEntityItemsInner {
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'accountId': string;
    /**
     *
     * @type {BankTransactionEntityAccount}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'account': BankTransactionEntityAccount;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'workspaceId': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'provider': BankTransactionsPageEntityItemsInnerProviderEnum;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'providerTransactionId': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'originalDescription': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'description': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'postedDate': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'competencyDate': string;
    /**
     *
     * @type {number}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'amount': number;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'directionNature': BankTransactionsPageEntityItemsInnerDirectionNatureEnum;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'status': BankTransactionsPageEntityItemsInnerStatusEnum;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'legalNature': BankTransactionsPageEntityItemsInnerLegalNatureEnum;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'providerCategoryId'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'providerCategoryName'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'categoryId'?: string | null;
    /**
     *
     * @type {BankTransactionEntityCategory}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'category'?: BankTransactionEntityCategory | null;
    /**
     *
     * @type {Array<BankTransactionEntityTagsInner>}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'tags': Array<BankTransactionEntityTagsInner>;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'paymentDataId'?: string | null;
    /**
     *
     * @type {BankTransactionEntityPaymentData}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'paymentData'?: BankTransactionEntityPaymentData | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'creditCardMetadataId'?: string | null;
    /**
     *
     * @type {BankTransactionEntityCreditCardMetadata}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'creditCardMetadata'?: BankTransactionEntityCreditCardMetadata | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'ignoredAt'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'verifiedAt'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'createdAt': string;
    /**
     *
     * @type {string}
     * @memberof BankTransactionsPageEntityItemsInner
     */
    'updatedAt': string;
}
export declare const BankTransactionsPageEntityItemsInnerProviderEnum: {
    readonly Pluggy: "PLUGGY";
    readonly Sofia: "SOFIA";
};
export type BankTransactionsPageEntityItemsInnerProviderEnum = typeof BankTransactionsPageEntityItemsInnerProviderEnum[keyof typeof BankTransactionsPageEntityItemsInnerProviderEnum];
export declare const BankTransactionsPageEntityItemsInnerDirectionNatureEnum: {
    readonly Credit: "CREDIT";
    readonly Debit: "DEBIT";
    readonly Undefined: "UNDEFINED";
};
export type BankTransactionsPageEntityItemsInnerDirectionNatureEnum = typeof BankTransactionsPageEntityItemsInnerDirectionNatureEnum[keyof typeof BankTransactionsPageEntityItemsInnerDirectionNatureEnum];
export declare const BankTransactionsPageEntityItemsInnerStatusEnum: {
    readonly Pending: "PENDING";
    readonly Posted: "POSTED";
};
export type BankTransactionsPageEntityItemsInnerStatusEnum = typeof BankTransactionsPageEntityItemsInnerStatusEnum[keyof typeof BankTransactionsPageEntityItemsInnerStatusEnum];
export declare const BankTransactionsPageEntityItemsInnerLegalNatureEnum: {
    readonly Personal: "PERSONAL";
    readonly Business: "BUSINESS";
    readonly Undefined: "UNDEFINED";
};
export type BankTransactionsPageEntityItemsInnerLegalNatureEnum = typeof BankTransactionsPageEntityItemsInnerLegalNatureEnum[keyof typeof BankTransactionsPageEntityItemsInnerLegalNatureEnum];
/**
 *
 * @export
 * @interface CashFlowByCategoryReportEntity
 */
export interface CashFlowByCategoryReportEntity {
    /**
     *
     * @type {Array<CashFlowByCategoryReportItemEntity>}
     * @memberof CashFlowByCategoryReportEntity
     */
    'items': Array<CashFlowByCategoryReportItemEntity>;
}
/**
 *
 * @export
 * @interface CashFlowByCategoryReportItemEntity
 */
export interface CashFlowByCategoryReportItemEntity {
    /**
     *
     * @type {string}
     * @memberof CashFlowByCategoryReportItemEntity
     */
    'categoryId': string;
    /**
     *
     * @type {string}
     * @memberof CashFlowByCategoryReportItemEntity
     */
    'categoryName': string;
    /**
     *
     * @type {number}
     * @memberof CashFlowByCategoryReportItemEntity
     */
    'absoluteValue': number;
    /**
     *
     * @type {number}
     * @memberof CashFlowByCategoryReportItemEntity
     */
    'percentage': number;
}
/**
 *
 * @export
 * @interface CashFlowReportDailyItemEntity
 */
export interface CashFlowReportDailyItemEntity {
    /**
     *
     * @type {number}
     * @memberof CashFlowReportDailyItemEntity
     */
    'index': number;
    /**
     *
     * @type {string}
     * @memberof CashFlowReportDailyItemEntity
     */
    'date': string;
    /**
     *
     * @type {number}
     * @memberof CashFlowReportDailyItemEntity
     */
    'dayOfYear': number;
    /**
     *
     * @type {string}
     * @memberof CashFlowReportDailyItemEntity
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof CashFlowReportDailyItemEntity
     */
    'minDate': string;
    /**
     *
     * @type {string}
     * @memberof CashFlowReportDailyItemEntity
     */
    'maxDate': string;
    /**
     *
     * @type {number}
     * @memberof CashFlowReportDailyItemEntity
     */
    'value'?: number;
}
/**
 *
 * @export
 * @interface CashFlowReportEntity
 */
export interface CashFlowReportEntity {
    /**
     *
     * @type {Array<CashFlowReportDailyItemEntity>}
     * @memberof CashFlowReportEntity
     */
    'dailyBalanceItems': Array<CashFlowReportDailyItemEntity>;
    /**
     *
     * @type {Array<CashFlowReportDailyItemEntity>}
     * @memberof CashFlowReportEntity
     */
    'dailyPostedIncomeItems': Array<CashFlowReportDailyItemEntity>;
    /**
     *
     * @type {Array<CashFlowReportDailyItemEntity>}
     * @memberof CashFlowReportEntity
     */
    'dailyCompetencyIncomeItems': Array<CashFlowReportDailyItemEntity>;
    /**
     *
     * @type {Array<CashFlowReportDailyItemEntity>}
     * @memberof CashFlowReportEntity
     */
    'dailyPostedOutcomeItems': Array<CashFlowReportDailyItemEntity>;
    /**
     *
     * @type {Array<CashFlowReportDailyItemEntity>}
     * @memberof CashFlowReportEntity
     */
    'dailyCompetencyOutcomeItems': Array<CashFlowReportDailyItemEntity>;
    /**
     *
     * @type {Array<CashFlowReportWeeklyItemEntity>}
     * @memberof CashFlowReportEntity
     */
    'weeklyBalanceItems': Array<CashFlowReportWeeklyItemEntity>;
    /**
     *
     * @type {Array<CashFlowReportWeeklyItemEntity>}
     * @memberof CashFlowReportEntity
     */
    'weeklyPostedIncomeItems': Array<CashFlowReportWeeklyItemEntity>;
    /**
     *
     * @type {Array<CashFlowReportWeeklyItemEntity>}
     * @memberof CashFlowReportEntity
     */
    'weeklyCompetencyIncomeItems': Array<CashFlowReportWeeklyItemEntity>;
    /**
     *
     * @type {Array<CashFlowReportWeeklyItemEntity>}
     * @memberof CashFlowReportEntity
     */
    'weeklyPostedOutcomeItems': Array<CashFlowReportWeeklyItemEntity>;
    /**
     *
     * @type {Array<CashFlowReportWeeklyItemEntity>}
     * @memberof CashFlowReportEntity
     */
    'weeklyCompetencyOutcomeItems': Array<CashFlowReportWeeklyItemEntity>;
    /**
     *
     * @type {Array<CashFlowReportMonthlyItemEntity>}
     * @memberof CashFlowReportEntity
     */
    'monthlyBalanceItems': Array<CashFlowReportMonthlyItemEntity>;
    /**
     *
     * @type {Array<CashFlowReportMonthlyItemEntity>}
     * @memberof CashFlowReportEntity
     */
    'monthlyPostedIncomeItems': Array<CashFlowReportMonthlyItemEntity>;
    /**
     *
     * @type {Array<CashFlowReportMonthlyItemEntity>}
     * @memberof CashFlowReportEntity
     */
    'monthlyCompetencyIncomeItems': Array<CashFlowReportMonthlyItemEntity>;
    /**
     *
     * @type {Array<CashFlowReportMonthlyItemEntity>}
     * @memberof CashFlowReportEntity
     */
    'monthlyPostedOutcomeItems': Array<CashFlowReportMonthlyItemEntity>;
    /**
     *
     * @type {Array<CashFlowReportMonthlyItemEntity>}
     * @memberof CashFlowReportEntity
     */
    'monthlyCompetencyOutcomeItems': Array<CashFlowReportMonthlyItemEntity>;
}
/**
 *
 * @export
 * @interface CashFlowReportMonthlyItemEntity
 */
export interface CashFlowReportMonthlyItemEntity {
    /**
     *
     * @type {number}
     * @memberof CashFlowReportMonthlyItemEntity
     */
    'index': number;
    /**
     *
     * @type {string}
     * @memberof CashFlowReportMonthlyItemEntity
     */
    'date': string;
    /**
     *
     * @type {number}
     * @memberof CashFlowReportMonthlyItemEntity
     */
    'month': number;
    /**
     *
     * @type {string}
     * @memberof CashFlowReportMonthlyItemEntity
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof CashFlowReportMonthlyItemEntity
     */
    'minDate': string;
    /**
     *
     * @type {string}
     * @memberof CashFlowReportMonthlyItemEntity
     */
    'maxDate': string;
    /**
     *
     * @type {number}
     * @memberof CashFlowReportMonthlyItemEntity
     */
    'value'?: number;
}
/**
 *
 * @export
 * @interface CashFlowReportWeeklyItemEntity
 */
export interface CashFlowReportWeeklyItemEntity {
    /**
     *
     * @type {number}
     * @memberof CashFlowReportWeeklyItemEntity
     */
    'index': number;
    /**
     *
     * @type {string}
     * @memberof CashFlowReportWeeklyItemEntity
     */
    'date': string;
    /**
     *
     * @type {number}
     * @memberof CashFlowReportWeeklyItemEntity
     */
    'week': number;
    /**
     *
     * @type {string}
     * @memberof CashFlowReportWeeklyItemEntity
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof CashFlowReportWeeklyItemEntity
     */
    'minDate': string;
    /**
     *
     * @type {string}
     * @memberof CashFlowReportWeeklyItemEntity
     */
    'maxDate': string;
    /**
     *
     * @type {number}
     * @memberof CashFlowReportWeeklyItemEntity
     */
    'value'?: number;
}
/**
 *
 * @export
 * @interface CreateBankTransactionTagRequestDto
 */
export interface CreateBankTransactionTagRequestDto {
    /**
     *
     * @type {string}
     * @memberof CreateBankTransactionTagRequestDto
     */
    'name': string;
}
/**
 *
 * @export
 * @interface CreateOrUpdateBankAccountRequestDto
 */
export interface CreateOrUpdateBankAccountRequestDto {
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankAccountRequestDto
     */
    'bankConnectionId': string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankAccountRequestDto
     */
    'provider': CreateOrUpdateBankAccountRequestDtoProviderEnum;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankAccountRequestDto
     */
    'providerAccountId': string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankAccountRequestDto
     */
    'type': CreateOrUpdateBankAccountRequestDtoTypeEnum;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankAccountRequestDto
     */
    'number': string;
    /**
     *
     * @type {number}
     * @memberof CreateOrUpdateBankAccountRequestDto
     */
    'balance': number;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankAccountRequestDto
     */
    'currencyCode': string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankAccountRequestDto
     */
    'name': string;
}
export declare const CreateOrUpdateBankAccountRequestDtoProviderEnum: {
    readonly Pluggy: "PLUGGY";
    readonly Sofia: "SOFIA";
};
export type CreateOrUpdateBankAccountRequestDtoProviderEnum = typeof CreateOrUpdateBankAccountRequestDtoProviderEnum[keyof typeof CreateOrUpdateBankAccountRequestDtoProviderEnum];
export declare const CreateOrUpdateBankAccountRequestDtoTypeEnum: {
    readonly Checking: "CHECKING";
    readonly Savings: "SAVINGS";
    readonly CreditCard: "CREDIT_CARD";
};
export type CreateOrUpdateBankAccountRequestDtoTypeEnum = typeof CreateOrUpdateBankAccountRequestDtoTypeEnum[keyof typeof CreateOrUpdateBankAccountRequestDtoTypeEnum];
/**
 *
 * @export
 * @interface CreateOrUpdateBankConnectionRequestDto
 */
export interface CreateOrUpdateBankConnectionRequestDto {
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankConnectionRequestDto
     */
    'createdByUserId': string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankConnectionRequestDto
     */
    'provider': CreateOrUpdateBankConnectionRequestDtoProviderEnum;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankConnectionRequestDto
     */
    'providerItemId': string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankConnectionRequestDto
     */
    'providerConnectorId': string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankConnectionRequestDto
     */
    'historyRange': CreateOrUpdateBankConnectionRequestDtoHistoryRangeEnum;
}
export declare const CreateOrUpdateBankConnectionRequestDtoProviderEnum: {
    readonly Pluggy: "PLUGGY";
    readonly Sofia: "SOFIA";
};
export type CreateOrUpdateBankConnectionRequestDtoProviderEnum = typeof CreateOrUpdateBankConnectionRequestDtoProviderEnum[keyof typeof CreateOrUpdateBankConnectionRequestDtoProviderEnum];
export declare const CreateOrUpdateBankConnectionRequestDtoHistoryRangeEnum: {
    readonly OneDay: "ONE_DAY";
    readonly OneWeek: "ONE_WEEK";
    readonly OneMonth: "ONE_MONTH";
    readonly TwoMonths: "TWO_MONTHS";
    readonly ThreeMonths: "THREE_MONTHS";
    readonly SixMonths: "SIX_MONTHS";
    readonly OneYear: "ONE_YEAR";
};
export type CreateOrUpdateBankConnectionRequestDtoHistoryRangeEnum = typeof CreateOrUpdateBankConnectionRequestDtoHistoryRangeEnum[keyof typeof CreateOrUpdateBankConnectionRequestDtoHistoryRangeEnum];
/**
 *
 * @export
 * @interface CreateOrUpdateBankTransactionsInBulkRequestDto
 */
export interface CreateOrUpdateBankTransactionsInBulkRequestDto {
    /**
     *
     * @type {Array<CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner>}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDto
     */
    'items': Array<CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner>;
}
/**
 *
 * @export
 * @interface CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner
 */
export interface CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner {
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner
     */
    'accountId': string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner
     */
    'provider': CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerProviderEnum;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner
     */
    'workspaceId': string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner
     */
    'providerTransactionId': string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner
     */
    'description': string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner
     */
    'postedDate': string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner
     */
    'competencyDate': string;
    /**
     *
     * @type {number}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner
     */
    'amount': number;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner
     */
    'directionNature': CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerDirectionNatureEnum;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner
     */
    'status': CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerStatusEnum;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner
     */
    'legalNature': CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerLegalNatureEnum;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner
     */
    'providerCategoryId'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner
     */
    'providerCategoryName'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner
     */
    'categoryId'?: string;
    /**
     *
     * @type {CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner
     */
    'paymentData'?: CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData;
    /**
     *
     * @type {CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerCreditCardMetadata}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner
     */
    'creditCardMetadata'?: CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerCreditCardMetadata;
    /**
     *
     * @type {Array<CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerCategoryGuessesInner>}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner
     */
    'categoryGuesses'?: Array<CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerCategoryGuessesInner>;
    /**
     *
     * @type {Array<CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerLegalNatureGuessesInner>}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInner
     */
    'legalNatureGuesses'?: Array<CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerLegalNatureGuessesInner>;
}
export declare const CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerProviderEnum: {
    readonly Pluggy: "PLUGGY";
    readonly Sofia: "SOFIA";
};
export type CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerProviderEnum = typeof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerProviderEnum[keyof typeof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerProviderEnum];
export declare const CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerDirectionNatureEnum: {
    readonly Credit: "CREDIT";
    readonly Debit: "DEBIT";
    readonly Undefined: "UNDEFINED";
};
export type CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerDirectionNatureEnum = typeof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerDirectionNatureEnum[keyof typeof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerDirectionNatureEnum];
export declare const CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerStatusEnum: {
    readonly Pending: "PENDING";
    readonly Posted: "POSTED";
};
export type CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerStatusEnum = typeof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerStatusEnum[keyof typeof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerStatusEnum];
export declare const CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerLegalNatureEnum: {
    readonly Personal: "PERSONAL";
    readonly Business: "BUSINESS";
    readonly Undefined: "UNDEFINED";
};
export type CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerLegalNatureEnum = typeof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerLegalNatureEnum[keyof typeof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerLegalNatureEnum];
/**
 *
 * @export
 * @interface CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerCategoryGuessesInner
 */
export interface CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerCategoryGuessesInner {
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerCategoryGuessesInner
     */
    'categoryId': string;
    /**
     *
     * @type {number}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerCategoryGuessesInner
     */
    'confidenceScore': number;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerCategoryGuessesInner
     */
    'guesserModelId': string;
}
/**
 *
 * @export
 * @interface CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerCreditCardMetadata
 */
export interface CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerCreditCardMetadata {
    /**
     *
     * @type {number}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerCreditCardMetadata
     */
    'installmentNumber'?: number;
    /**
     *
     * @type {number}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerCreditCardMetadata
     */
    'totalInstallments'?: number;
    /**
     *
     * @type {number}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerCreditCardMetadata
     */
    'totalAmount'?: number;
    /**
     *
     * @type {number}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerCreditCardMetadata
     */
    'payeeMCC'?: number;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerCreditCardMetadata
     */
    'cardNumber'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerCreditCardMetadata
     */
    'billId'?: string;
}
/**
 *
 * @export
 * @interface CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerLegalNatureGuessesInner
 */
export interface CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerLegalNatureGuessesInner {
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerLegalNatureGuessesInner
     */
    'legalNature': CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerLegalNatureGuessesInnerLegalNatureEnum;
    /**
     *
     * @type {number}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerLegalNatureGuessesInner
     */
    'confidenceScore': number;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerLegalNatureGuessesInner
     */
    'guesserModelId': string;
}
export declare const CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerLegalNatureGuessesInnerLegalNatureEnum: {
    readonly Personal: "PERSONAL";
    readonly Business: "BUSINESS";
    readonly Undefined: "UNDEFINED";
};
export type CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerLegalNatureGuessesInnerLegalNatureEnum = typeof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerLegalNatureGuessesInnerLegalNatureEnum[keyof typeof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerLegalNatureGuessesInnerLegalNatureEnum];
/**
 *
 * @export
 * @interface CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData
 */
export interface CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData {
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData
     */
    'payerName'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData
     */
    'payerBranchNumber'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData
     */
    'payerAccountNumber'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData
     */
    'payerRoutingNumber'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData
     */
    'payerRoutingNumberISPB'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData
     */
    'payerDocumentNumberType'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData
     */
    'payerDocumentNumberValue'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData
     */
    'reason'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData
     */
    'receiverName'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData
     */
    'receiverBranchNumber'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData
     */
    'receiverAccountNumber'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData
     */
    'receiverRoutingNumber'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData
     */
    'receiverRoutingNumberISPB'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData
     */
    'receiverDocumentNumberType'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData
     */
    'receiverDocumentNumberValue'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData
     */
    'paymentMethod'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData
     */
    'referenceNumber'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerPaymentData
     */
    'receiverReferenceId'?: string;
}
/**
 *
 * @export
 * @interface CreateOrUpdateMessageTokenRequestDto
 */
export interface CreateOrUpdateMessageTokenRequestDto {
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateMessageTokenRequestDto
     */
    'platform': CreateOrUpdateMessageTokenRequestDtoPlatformEnum;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateMessageTokenRequestDto
     */
    'provider': CreateOrUpdateMessageTokenRequestDtoProviderEnum;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateMessageTokenRequestDto
     */
    'deviceId': string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateMessageTokenRequestDto
     */
    'token': string;
}
export declare const CreateOrUpdateMessageTokenRequestDtoPlatformEnum: {
    readonly Web: "WEB";
    readonly Android: "ANDROID";
    readonly Ios: "IOS";
};
export type CreateOrUpdateMessageTokenRequestDtoPlatformEnum = typeof CreateOrUpdateMessageTokenRequestDtoPlatformEnum[keyof typeof CreateOrUpdateMessageTokenRequestDtoPlatformEnum];
export declare const CreateOrUpdateMessageTokenRequestDtoProviderEnum: {
    readonly FirebaseMessaging: "FIREBASE_MESSAGING";
};
export type CreateOrUpdateMessageTokenRequestDtoProviderEnum = typeof CreateOrUpdateMessageTokenRequestDtoProviderEnum[keyof typeof CreateOrUpdateMessageTokenRequestDtoProviderEnum];
/**
 *
 * @export
 * @interface CreatePluggyConnectTokenRequestDto
 */
export interface CreatePluggyConnectTokenRequestDto {
    /**
     *
     * @type {string}
     * @memberof CreatePluggyConnectTokenRequestDto
     */
    'itemId'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CreatePluggyConnectTokenRequestDto
     */
    'workspaceId': string;
    /**
     *
     * @type {string}
     * @memberof CreatePluggyConnectTokenRequestDto
     */
    'historyRange': CreatePluggyConnectTokenRequestDtoHistoryRangeEnum;
}
export declare const CreatePluggyConnectTokenRequestDtoHistoryRangeEnum: {
    readonly OneDay: "ONE_DAY";
    readonly OneWeek: "ONE_WEEK";
    readonly OneMonth: "ONE_MONTH";
    readonly TwoMonths: "TWO_MONTHS";
    readonly ThreeMonths: "THREE_MONTHS";
    readonly SixMonths: "SIX_MONTHS";
    readonly OneYear: "ONE_YEAR";
};
export type CreatePluggyConnectTokenRequestDtoHistoryRangeEnum = typeof CreatePluggyConnectTokenRequestDtoHistoryRangeEnum[keyof typeof CreatePluggyConnectTokenRequestDtoHistoryRangeEnum];
/**
 *
 * @export
 * @interface CreateProfileRequestDto
 */
export interface CreateProfileRequestDto {
    /**
     *
     * @type {string}
     * @memberof CreateProfileRequestDto
     */
    'fullName': string;
    /**
     *
     * @type {string}
     * @memberof CreateProfileRequestDto
     */
    'birthDate': string;
}
/**
 *
 * @export
 * @interface CreateWorkspaceRequestDto
 */
export interface CreateWorkspaceRequestDto {
    /**
     *
     * @type {string}
     * @memberof CreateWorkspaceRequestDto
     */
    'prettyId': string;
    /**
     *
     * @type {string}
     * @memberof CreateWorkspaceRequestDto
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof CreateWorkspaceRequestDto
     */
    'type': CreateWorkspaceRequestDtoTypeEnum;
    /**
     *
     * @type {string}
     * @memberof CreateWorkspaceRequestDto
     */
    'businessSegment'?: CreateWorkspaceRequestDtoBusinessSegmentEnum | null;
    /**
     *
     * @type {string}
     * @memberof CreateWorkspaceRequestDto
     */
    'otherDescription'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof CreateWorkspaceRequestDto
     */
    'throwAfterCreateWorkspace'?: boolean | null;
}
export declare const CreateWorkspaceRequestDtoTypeEnum: {
    readonly Personal: "PERSONAL";
    readonly Business: "BUSINESS";
    readonly Hybrid: "HYBRID";
};
export type CreateWorkspaceRequestDtoTypeEnum = typeof CreateWorkspaceRequestDtoTypeEnum[keyof typeof CreateWorkspaceRequestDtoTypeEnum];
export declare const CreateWorkspaceRequestDtoBusinessSegmentEnum: {
    readonly Attorney: "ATTORNEY";
    readonly Architect: "ARCHITECT";
    readonly Consultant: "CONSULTANT";
    readonly Realtor: "REALTOR";
    readonly InsuranceBroker: "INSURANCE_BROKER";
    readonly Dentist: "DENTIST";
    readonly Physiotherapist: "PHYSIOTHERAPIST";
    readonly Physician: "PHYSICIAN";
    readonly Tutor: "TUTOR";
    readonly Psychologist: "PSYCHOLOGIST";
    readonly Other: "OTHER";
};
export type CreateWorkspaceRequestDtoBusinessSegmentEnum = typeof CreateWorkspaceRequestDtoBusinessSegmentEnum[keyof typeof CreateWorkspaceRequestDtoBusinessSegmentEnum];
/**
 *
 * @export
 * @interface CredentialsEntity
 */
export interface CredentialsEntity {
    /**
     *
     * @type {string}
     * @memberof CredentialsEntity
     */
    'userId': string;
    /**
     *
     * @type {string}
     * @memberof CredentialsEntity
     */
    'accessToken': string;
    /**
     *
     * @type {string}
     * @memberof CredentialsEntity
     */
    'refreshToken': string;
}
/**
 *
 * @export
 * @interface DreLineOutcomeResultEntity
 */
export interface DreLineOutcomeResultEntity {
    /**
     *
     * @type {number}
     * @memberof DreLineOutcomeResultEntity
     */
    'amountInCents': number;
    /**
     *
     * @type {number}
     * @memberof DreLineOutcomeResultEntity
     */
    'ratio'?: number;
}
/**
 *
 * @export
 * @interface EmailInUseReportEntity
 */
export interface EmailInUseReportEntity {
    /**
     *
     * @type {string}
     * @memberof EmailInUseReportEntity
     */
    'email': string;
    /**
     *
     * @type {boolean}
     * @memberof EmailInUseReportEntity
     */
    'inUse': boolean;
}
/**
 *
 * @export
 * @interface ExceptionResponseEntity
 */
export interface ExceptionResponseEntity {
    /**
     *
     * @type {number}
     * @memberof ExceptionResponseEntity
     */
    'statusCode': number;
    /**
     *
     * @type {string}
     * @memberof ExceptionResponseEntity
     */
    'message': string;
    /**
     *
     * @type {Array<ExceptionResponseEntityErrorsInner>}
     * @memberof ExceptionResponseEntity
     */
    'errors': Array<ExceptionResponseEntityErrorsInner>;
}
/**
 *
 * @export
 * @interface ExceptionResponseEntityErrorsInner
 */
export interface ExceptionResponseEntityErrorsInner {
    /**
     *
     * @type {string}
     * @memberof ExceptionResponseEntityErrorsInner
     */
    'fieldPath': string;
    /**
     *
     * @type {Array<string>}
     * @memberof ExceptionResponseEntityErrorsInner
     */
    'messages': Array<string>;
}
/**
 *
 * @export
 * @interface FinancialStatementOutcomeReportDataEntity
 */
export interface FinancialStatementOutcomeReportDataEntity {
    /**
     *
     * @type {string}
     * @memberof FinancialStatementOutcomeReportDataEntity
     */
    'name': string;
    /**
     *
     * @type {number}
     * @memberof FinancialStatementOutcomeReportDataEntity
     */
    'outcome': number;
    /**
     *
     * @type {number}
     * @memberof FinancialStatementOutcomeReportDataEntity
     */
    'percentage'?: number;
}
/**
 *
 * @export
 * @interface FinancialStatementOutflowsSubcategoryData
 */
export interface FinancialStatementOutflowsSubcategoryData {
    /**
     *
     * @type {string}
     * @memberof FinancialStatementOutflowsSubcategoryData
     */
    'subcategoryId': string;
    /**
     *
     * @type {string}
     * @memberof FinancialStatementOutflowsSubcategoryData
     */
    'subcategoryName': string;
    /**
     *
     * @type {number}
     * @memberof FinancialStatementOutflowsSubcategoryData
     */
    'outcome': number;
}
/**
 *
 * @export
 * @interface FinancialStatementOutlfowsCategoryData
 */
export interface FinancialStatementOutlfowsCategoryData {
    /**
     *
     * @type {string}
     * @memberof FinancialStatementOutlfowsCategoryData
     */
    'categoryId': string;
    /**
     *
     * @type {string}
     * @memberof FinancialStatementOutlfowsCategoryData
     */
    'categoryName': string;
    /**
     *
     * @type {number}
     * @memberof FinancialStatementOutlfowsCategoryData
     */
    'outcome': number;
    /**
     *
     * @type {Array<FinancialStatementOutflowsSubcategoryData>}
     * @memberof FinancialStatementOutlfowsCategoryData
     */
    'subcategories': Array<FinancialStatementOutflowsSubcategoryData>;
}
/**
 *
 * @export
 * @interface FinancialStatementReport
 */
export interface FinancialStatementReport {
    /**
     *
     * @type {Array<FinancialStatementReportItemEntity>}
     * @memberof FinancialStatementReport
     */
    'items': Array<FinancialStatementReportItemEntity>;
}
/**
 *
 * @export
 * @interface FinancialStatementReportItemEntity
 */
export interface FinancialStatementReportItemEntity {
    /**
     *
     * @type {string}
     * @memberof FinancialStatementReportItemEntity
     */
    'type': string;
    /**
     *
     * @type {FinancialStatementeEntriesCategoryData}
     * @memberof FinancialStatementReportItemEntity
     */
    'entriesCategoryData'?: FinancialStatementeEntriesCategoryData;
    /**
     *
     * @type {FinancialStatementOutlfowsCategoryData}
     * @memberof FinancialStatementReportItemEntity
     */
    'outflowsCategoryData'?: FinancialStatementOutlfowsCategoryData;
    /**
     *
     * @type {FinancialStatementOutcomeReportDataEntity}
     * @memberof FinancialStatementReportItemEntity
     */
    'outcomeData'?: FinancialStatementOutcomeReportDataEntity;
}
/**
 *
 * @export
 * @interface FinancialStatementeEntriesCategoryData
 */
export interface FinancialStatementeEntriesCategoryData {
    /**
     *
     * @type {string}
     * @memberof FinancialStatementeEntriesCategoryData
     */
    'categoryId': string;
    /**
     *
     * @type {string}
     * @memberof FinancialStatementeEntriesCategoryData
     */
    'categoryName': string;
    /**
     *
     * @type {number}
     * @memberof FinancialStatementeEntriesCategoryData
     */
    'outcome': number;
    /**
     *
     * @type {Array<FinancialStatementeEntriesSubcategoryData>}
     * @memberof FinancialStatementeEntriesCategoryData
     */
    'subcategories': Array<FinancialStatementeEntriesSubcategoryData>;
}
/**
 *
 * @export
 * @interface FinancialStatementeEntriesSubcategoryData
 */
export interface FinancialStatementeEntriesSubcategoryData {
    /**
     *
     * @type {string}
     * @memberof FinancialStatementeEntriesSubcategoryData
     */
    'subcategoryId': string;
    /**
     *
     * @type {string}
     * @memberof FinancialStatementeEntriesSubcategoryData
     */
    'subcategoryName': string;
    /**
     *
     * @type {number}
     * @memberof FinancialStatementeEntriesSubcategoryData
     */
    'outcome': number;
}
/**
 *
 * @export
 * @interface GenerateAndSendEmailVerificationCodeRequestDto
 */
export interface GenerateAndSendEmailVerificationCodeRequestDto {
    /**
     *
     * @type {string}
     * @memberof GenerateAndSendEmailVerificationCodeRequestDto
     */
    'email': string;
    /**
     *
     * @type {string}
     * @memberof GenerateAndSendEmailVerificationCodeRequestDto
     */
    'purpose': GenerateAndSendEmailVerificationCodeRequestDtoPurposeEnum;
}
export declare const GenerateAndSendEmailVerificationCodeRequestDtoPurposeEnum: {
    readonly Up: "SIGN_UP";
    readonly In: "SIGN_IN";
};
export type GenerateAndSendEmailVerificationCodeRequestDtoPurposeEnum = typeof GenerateAndSendEmailVerificationCodeRequestDtoPurposeEnum[keyof typeof GenerateAndSendEmailVerificationCodeRequestDtoPurposeEnum];
/**
 *
 * @export
 * @interface GenerateAndSendPhoneVerificationCodeRequestDto
 */
export interface GenerateAndSendPhoneVerificationCodeRequestDto {
    /**
     *
     * @type {string}
     * @memberof GenerateAndSendPhoneVerificationCodeRequestDto
     */
    'phone': string;
    /**
     *
     * @type {string}
     * @memberof GenerateAndSendPhoneVerificationCodeRequestDto
     */
    'purpose': GenerateAndSendPhoneVerificationCodeRequestDtoPurposeEnum;
}
export declare const GenerateAndSendPhoneVerificationCodeRequestDtoPurposeEnum: {
    readonly Up: "SIGN_UP";
    readonly In: "SIGN_IN";
};
export type GenerateAndSendPhoneVerificationCodeRequestDtoPurposeEnum = typeof GenerateAndSendPhoneVerificationCodeRequestDtoPurposeEnum[keyof typeof GenerateAndSendPhoneVerificationCodeRequestDtoPurposeEnum];
/**
 *
 * @export
 * @interface GenerateEmailInUseReportRequestDto
 */
export interface GenerateEmailInUseReportRequestDto {
    /**
     *
     * @type {string}
     * @memberof GenerateEmailInUseReportRequestDto
     */
    'email': string;
}
/**
 *
 * @export
 * @interface GeneratePhoneInUseReportRequestDto
 */
export interface GeneratePhoneInUseReportRequestDto {
    /**
     *
     * @type {string}
     * @memberof GeneratePhoneInUseReportRequestDto
     */
    'phone': string;
}
/**
 *
 * @export
 * @interface MeanResultEntity
 */
export interface MeanResultEntity {
    /**
     *
     * @type {number}
     * @memberof MeanResultEntity
     */
    'amountInCents'?: number;
    /**
     *
     * @type {Array<MeanResultSubcategoryItemEntity>}
     * @memberof MeanResultEntity
     */
    'subcategories'?: Array<MeanResultSubcategoryItemEntity>;
}
/**
 *
 * @export
 * @interface MeanResultSubcategoryItemEntity
 */
export interface MeanResultSubcategoryItemEntity {
    /**
     *
     * @type {string}
     * @memberof MeanResultSubcategoryItemEntity
     */
    'subcategoryId': string;
    /**
     *
     * @type {string}
     * @memberof MeanResultSubcategoryItemEntity
     */
    'subcategoryName': string;
    /**
     *
     * @type {number}
     * @memberof MeanResultSubcategoryItemEntity
     */
    'amountInCents'?: number;
}
/**
 *
 * @export
 * @interface MessageTokenEntity
 */
export interface MessageTokenEntity {
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntity
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntity
     */
    'workspaceId': string;
    /**
     *
     * @type {MessageTokenEntityWorksapce}
     * @memberof MessageTokenEntity
     */
    'worksapce'?: MessageTokenEntityWorksapce | null;
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntity
     */
    'userId': string;
    /**
     *
     * @type {MessageTokenEntityUser}
     * @memberof MessageTokenEntity
     */
    'user'?: MessageTokenEntityUser | null;
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntity
     */
    'provider': MessageTokenEntityProviderEnum;
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntity
     */
    'platform': MessageTokenEntityPlatformEnum;
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntity
     */
    'deviceId': string;
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntity
     */
    'token': string;
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntity
     */
    'createdAt': string;
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntity
     */
    'updatedAt': string;
}
export declare const MessageTokenEntityProviderEnum: {
    readonly FirebaseMessaging: "FIREBASE_MESSAGING";
};
export type MessageTokenEntityProviderEnum = typeof MessageTokenEntityProviderEnum[keyof typeof MessageTokenEntityProviderEnum];
export declare const MessageTokenEntityPlatformEnum: {
    readonly Web: "WEB";
    readonly Android: "ANDROID";
    readonly Ios: "IOS";
};
export type MessageTokenEntityPlatformEnum = typeof MessageTokenEntityPlatformEnum[keyof typeof MessageTokenEntityPlatformEnum];
/**
 *
 * @export
 * @interface MessageTokenEntityUser
 */
export interface MessageTokenEntityUser {
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntityUser
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntityUser
     */
    'email': string;
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntityUser
     */
    'phone': string;
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntityUser
     */
    'passwordHash'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof MessageTokenEntityUser
     */
    'isRoot': boolean;
    /**
     *
     * @type {Array<UserEntityWorkspacesInner>}
     * @memberof MessageTokenEntityUser
     */
    'workspaces'?: Array<UserEntityWorkspacesInner> | null;
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntityUser
     */
    'createdAt': string;
}
/**
 *
 * @export
 * @interface MessageTokenEntityWorksapce
 */
export interface MessageTokenEntityWorksapce {
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntityWorksapce
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntityWorksapce
     */
    'prettyId': string;
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntityWorksapce
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntityWorksapce
     */
    'type': MessageTokenEntityWorksapceTypeEnum;
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntityWorksapce
     */
    'creatorUserId': string;
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntityWorksapce
     */
    'selectedPersonalCategoryTreeId'?: string | null;
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntityWorksapce
     */
    'selectedBusinessCategoryTreeId'?: string | null;
    /**
     *
     * @type {UserEntityWorkspacesInnerHybridSettings}
     * @memberof MessageTokenEntityWorksapce
     */
    'hybridSettings'?: UserEntityWorkspacesInnerHybridSettings | null;
    /**
     *
     * @type {UserEntityWorkspacesInnerHybridSettings}
     * @memberof MessageTokenEntityWorksapce
     */
    'businessSettings'?: UserEntityWorkspacesInnerHybridSettings | null;
    /**
     *
     * @type {UserEntityWorkspacesInnerPersonalSettings}
     * @memberof MessageTokenEntityWorksapce
     */
    'personalSettings'?: UserEntityWorkspacesInnerPersonalSettings | null;
    /**
     *
     * @type {string}
     * @memberof MessageTokenEntityWorksapce
     */
    'createdAt': string;
}
export declare const MessageTokenEntityWorksapceTypeEnum: {
    readonly Personal: "PERSONAL";
    readonly Business: "BUSINESS";
    readonly Hybrid: "HYBRID";
};
export type MessageTokenEntityWorksapceTypeEnum = typeof MessageTokenEntityWorksapceTypeEnum[keyof typeof MessageTokenEntityWorksapceTypeEnum];
/**
 *
 * @export
 * @interface PartialUpdateBankTransactionRequestDto
 */
export interface PartialUpdateBankTransactionRequestDto {
    /**
     *
     * @type {string}
     * @memberof PartialUpdateBankTransactionRequestDto
     */
    'description'?: string;
    /**
     *
     * @type {string}
     * @memberof PartialUpdateBankTransactionRequestDto
     */
    'categoryId'?: string;
    /**
     *
     * @type {string}
     * @memberof PartialUpdateBankTransactionRequestDto
     */
    'competencyDate'?: string;
    /**
     *
     * @type {boolean}
     * @memberof PartialUpdateBankTransactionRequestDto
     */
    'ignore'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof PartialUpdateBankTransactionRequestDto
     */
    'verify'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof PartialUpdateBankTransactionRequestDto
     */
    'tagIds'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof PartialUpdateBankTransactionRequestDto
     */
    'legalNature'?: PartialUpdateBankTransactionRequestDtoLegalNatureEnum;
}
export declare const PartialUpdateBankTransactionRequestDtoLegalNatureEnum: {
    readonly Personal: "PERSONAL";
    readonly Business: "BUSINESS";
    readonly Undefined: "UNDEFINED";
};
export type PartialUpdateBankTransactionRequestDtoLegalNatureEnum = typeof PartialUpdateBankTransactionRequestDtoLegalNatureEnum[keyof typeof PartialUpdateBankTransactionRequestDtoLegalNatureEnum];
/**
 *
 * @export
 * @interface PartialUpdateProfileRequestDto
 */
export interface PartialUpdateProfileRequestDto {
    /**
     *
     * @type {string}
     * @memberof PartialUpdateProfileRequestDto
     */
    'fullName'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PartialUpdateProfileRequestDto
     */
    'birthDate'?: string | null;
}
/**
 *
 * @export
 * @interface PartialUpdateWorkspaceRequestDto
 */
export interface PartialUpdateWorkspaceRequestDto {
    /**
     *
     * @type {string}
     * @memberof PartialUpdateWorkspaceRequestDto
     */
    'name'?: string | null;
}
/**
 *
 * @export
 * @interface PluggyConnectTokenEntity
 */
export interface PluggyConnectTokenEntity {
    /**
     *
     * @type {string}
     * @memberof PluggyConnectTokenEntity
     */
    'accessToken': string;
}
/**
 *
 * @export
 * @interface ProfileEntity
 */
export interface ProfileEntity {
    /**
     *
     * @type {string}
     * @memberof ProfileEntity
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof ProfileEntity
     */
    'userId': string;
    /**
     *
     * @type {string}
     * @memberof ProfileEntity
     */
    'fullName': string;
    /**
     *
     * @type {string}
     * @memberof ProfileEntity
     */
    'birthDate': string;
    /**
     *
     * @type {string}
     * @memberof ProfileEntity
     */
    'createdAt': string;
    /**
     *
     * @type {string}
     * @memberof ProfileEntity
     */
    'updatedAt': string;
}
/**
 *
 * @export
 * @interface ProportionResultEntity
 */
export interface ProportionResultEntity {
    /**
     *
     * @type {number}
     * @memberof ProportionResultEntity
     */
    'ratio'?: number;
}
/**
 *
 * @export
 * @interface RefreshRequestDto
 */
export interface RefreshRequestDto {
    /**
     *
     * @type {string}
     * @memberof RefreshRequestDto
     */
    'clientId': string;
}
/**
 *
 * @export
 * @interface SignInWithEmailRequestDto
 */
export interface SignInWithEmailRequestDto {
    /**
     *
     * @type {string}
     * @memberof SignInWithEmailRequestDto
     */
    'email': string;
    /**
     *
     * @type {string}
     * @memberof SignInWithEmailRequestDto
     */
    'password': string;
    /**
     *
     * @type {string}
     * @memberof SignInWithEmailRequestDto
     */
    'clientId': string;
}
/**
 *
 * @export
 * @interface SignUpWithEmailRequestDto
 */
export interface SignUpWithEmailRequestDto {
    /**
     *
     * @type {string}
     * @memberof SignUpWithEmailRequestDto
     */
    'email': string;
    /**
     *
     * @type {string}
     * @memberof SignUpWithEmailRequestDto
     */
    'phone': string;
    /**
     *
     * @type {string}
     * @memberof SignUpWithEmailRequestDto
     */
    'password': string;
    /**
     *
     * @type {string}
     * @memberof SignUpWithEmailRequestDto
     */
    'emailVerificationCode': string;
    /**
     *
     * @type {string}
     * @memberof SignUpWithEmailRequestDto
     */
    'phoneVerificationCode': string;
}
/**
 *
 * @export
 * @interface SyncBankAccountTransactionsPageBeginRequestDto
 */
export interface SyncBankAccountTransactionsPageBeginRequestDto {
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageBeginRequestDto
     */
    'syncItemId': string;
    /**
     *
     * @type {number}
     * @memberof SyncBankAccountTransactionsPageBeginRequestDto
     */
    'pageNumber': number;
}
/**
 *
 * @export
 * @interface SyncBankAccountTransactionsPageEndRequestDto
 */
export interface SyncBankAccountTransactionsPageEndRequestDto {
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDto
     */
    'syncItemId': string;
    /**
     *
     * @type {number}
     * @memberof SyncBankAccountTransactionsPageEndRequestDto
     */
    'pageNumber': number;
    /**
     *
     * @type {SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPage}
     * @memberof SyncBankAccountTransactionsPageEndRequestDto
     */
    'bankProviderTransactionsPage': SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPage;
    /**
     *
     * @type {Array<SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInner>}
     * @memberof SyncBankAccountTransactionsPageEndRequestDto
     */
    'legalNatureAssignRequests': Array<SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInner>;
    /**
     *
     * @type {Array<SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInner>}
     * @memberof SyncBankAccountTransactionsPageEndRequestDto
     */
    'categoryAssignRequests': Array<SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInner>;
}
/**
 *
 * @export
 * @interface SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPage
 */
export interface SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPage {
    /**
     *
     * @type {number}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPage
     */
    'pageNumber': number;
    /**
     *
     * @type {number}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPage
     */
    'pageSize': number;
    /**
     *
     * @type {number}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPage
     */
    'totalPages': number;
    /**
     *
     * @type {number}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPage
     */
    'totalResults': number;
    /**
     *
     * @type {Array<SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInner>}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPage
     */
    'transactions': Array<SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInner>;
}
/**
 *
 * @export
 * @interface SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInner
 */
export interface SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInner {
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInner
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInner
     */
    'description': string;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInner
     */
    'postedDate': string;
    /**
     *
     * @type {number}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInner
     */
    'amount': number;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInner
     */
    'directionNature': SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerDirectionNatureEnum;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInner
     */
    'status': SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerStatusEnum;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInner
     */
    'categoryId'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInner
     */
    'categoryName'?: string | null;
    /**
     *
     * @type {SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInner
     */
    'paymentData'?: SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData | null;
    /**
     *
     * @type {SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerCreditCardMetadata}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInner
     */
    'creditCardMetadata'?: SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerCreditCardMetadata | null;
}
export declare const SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerDirectionNatureEnum: {
    readonly Credit: "CREDIT";
    readonly Debit: "DEBIT";
    readonly Undefined: "UNDEFINED";
};
export type SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerDirectionNatureEnum = typeof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerDirectionNatureEnum[keyof typeof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerDirectionNatureEnum];
export declare const SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerStatusEnum: {
    readonly Pending: "PENDING";
    readonly Posted: "POSTED";
};
export type SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerStatusEnum = typeof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerStatusEnum[keyof typeof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerStatusEnum];
/**
 *
 * @export
 * @interface SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerCreditCardMetadata
 */
export interface SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerCreditCardMetadata {
    /**
     *
     * @type {number}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerCreditCardMetadata
     */
    'installmentNumber'?: number | null;
    /**
     *
     * @type {number}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerCreditCardMetadata
     */
    'totalInstallments'?: number | null;
    /**
     *
     * @type {number}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerCreditCardMetadata
     */
    'totalAmount'?: number | null;
    /**
     *
     * @type {number}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerCreditCardMetadata
     */
    'payeeMCC'?: number | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerCreditCardMetadata
     */
    'cardNumber'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerCreditCardMetadata
     */
    'billId'?: string | null;
}
/**
 *
 * @export
 * @interface SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData
 */
export interface SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData {
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData
     */
    'payerName'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData
     */
    'payerBranchNumber'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData
     */
    'payerAccountNumber'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData
     */
    'payerRoutingNumber'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData
     */
    'payerRoutingNumberISPB'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData
     */
    'payerDocumentNumberType'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData
     */
    'payerDocumentNumberValue'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData
     */
    'reason'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData
     */
    'receiverName'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData
     */
    'receiverBranchNumber'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData
     */
    'receiverAccountNumber'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData
     */
    'receiverRoutingNumber'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData
     */
    'receiverRoutingNumberISPB'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData
     */
    'receiverDocumentNumberType'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData
     */
    'receiverDocumentNumberValue'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData
     */
    'paymentMethod'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData
     */
    'referenceNumber'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoBankProviderTransactionsPageTransactionsInnerPaymentData
     */
    'receiverReferenceId'?: string | null;
}
/**
 *
 * @export
 * @interface SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInner
 */
export interface SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInner {
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInner
     */
    'bankProviderTransactionId': string;
    /**
     *
     * @type {SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInnerCategory}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInner
     */
    'category': SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInnerCategory;
}
/**
 *
 * @export
 * @interface SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInnerCategory
 */
export interface SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInnerCategory {
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInnerCategory
     */
    'origin': SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInnerCategoryOriginEnum;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInnerCategory
     */
    'id'?: string;
    /**
     *
     * @type {SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInnerCategoryPredictionResponse}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInnerCategory
     */
    'predictionResponse'?: SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInnerCategoryPredictionResponse;
}
export declare const SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInnerCategoryOriginEnum: {
    readonly Undefined: "UNDEFINED";
    readonly Prediction: "PREDICTION";
};
export type SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInnerCategoryOriginEnum = typeof SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInnerCategoryOriginEnum[keyof typeof SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInnerCategoryOriginEnum];
/**
 *
 * @export
 * @interface SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInnerCategoryPredictionResponse
 */
export interface SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInnerCategoryPredictionResponse {
    /**
     *
     * @type {Array<CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerCategoryGuessesInner>}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoCategoryAssignRequestsInnerCategoryPredictionResponse
     */
    'sortedCategoryGuesses': Array<CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerCategoryGuessesInner>;
}
/**
 *
 * @export
 * @interface SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInner
 */
export interface SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInner {
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInner
     */
    'bankProviderTransactionId': string;
    /**
     *
     * @type {SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInnerLegalNature}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInner
     */
    'legalNature': SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInnerLegalNature;
}
/**
 *
 * @export
 * @interface SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInnerLegalNature
 */
export interface SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInnerLegalNature {
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInnerLegalNature
     */
    'origin': SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInnerLegalNatureOriginEnum;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInnerLegalNature
     */
    'value': SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInnerLegalNatureValueEnum;
    /**
     *
     * @type {CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerLegalNatureGuessesInner}
     * @memberof SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInnerLegalNature
     */
    'predictionResponse'?: CreateOrUpdateBankTransactionsInBulkRequestDtoItemsInnerLegalNatureGuessesInner;
}
export declare const SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInnerLegalNatureOriginEnum: {
    readonly Automatic: "AUTOMATIC";
    readonly Prediction: "PREDICTION";
};
export type SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInnerLegalNatureOriginEnum = typeof SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInnerLegalNatureOriginEnum[keyof typeof SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInnerLegalNatureOriginEnum];
export declare const SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInnerLegalNatureValueEnum: {
    readonly Personal: "PERSONAL";
    readonly Business: "BUSINESS";
    readonly Undefined: "UNDEFINED";
};
export type SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInnerLegalNatureValueEnum = typeof SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInnerLegalNatureValueEnum[keyof typeof SyncBankAccountTransactionsPageEndRequestDtoLegalNatureAssignRequestsInnerLegalNatureValueEnum];
/**
 *
 * @export
 * @interface SyncBankAccountTransactionsRequestDto
 */
export interface SyncBankAccountTransactionsRequestDto {
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsRequestDto
     */
    'accountId': string;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsRequestDto
     */
    'provider': SyncBankAccountTransactionsRequestDtoProviderEnum;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsRequestDto
     */
    'providerAccountId': string;
    /**
     *
     * @type {string}
     * @memberof SyncBankAccountTransactionsRequestDto
     */
    'providerItemId': string;
}
export declare const SyncBankAccountTransactionsRequestDtoProviderEnum: {
    readonly Pluggy: "PLUGGY";
    readonly Sofia: "SOFIA";
};
export type SyncBankAccountTransactionsRequestDtoProviderEnum = typeof SyncBankAccountTransactionsRequestDtoProviderEnum[keyof typeof SyncBankAccountTransactionsRequestDtoProviderEnum];
/**
 *
 * @export
 * @interface SyncBankItemRequestDto
 */
export interface SyncBankItemRequestDto {
    /**
     *
     * @type {string}
     * @memberof SyncBankItemRequestDto
     */
    'providerItemId': string;
    /**
     *
     * @type {string}
     * @memberof SyncBankItemRequestDto
     */
    'provider': SyncBankItemRequestDtoProviderEnum;
}
export declare const SyncBankItemRequestDtoProviderEnum: {
    readonly Pluggy: "PLUGGY";
    readonly Sofia: "SOFIA";
};
export type SyncBankItemRequestDtoProviderEnum = typeof SyncBankItemRequestDtoProviderEnum[keyof typeof SyncBankItemRequestDtoProviderEnum];
/**
 *
 * @export
 * @interface UserEntity
 */
export interface UserEntity {
    /**
     *
     * @type {string}
     * @memberof UserEntity
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof UserEntity
     */
    'email': string;
    /**
     *
     * @type {string}
     * @memberof UserEntity
     */
    'phone': string;
    /**
     *
     * @type {string}
     * @memberof UserEntity
     */
    'passwordHash'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof UserEntity
     */
    'isRoot': boolean;
    /**
     *
     * @type {Array<UserEntityWorkspacesInner>}
     * @memberof UserEntity
     */
    'workspaces'?: Array<UserEntityWorkspacesInner> | null;
    /**
     *
     * @type {string}
     * @memberof UserEntity
     */
    'createdAt': string;
}
/**
 *
 * @export
 * @interface UserEntityWorkspacesInner
 */
export interface UserEntityWorkspacesInner {
    /**
     *
     * @type {string}
     * @memberof UserEntityWorkspacesInner
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof UserEntityWorkspacesInner
     */
    'prettyId': string;
    /**
     *
     * @type {string}
     * @memberof UserEntityWorkspacesInner
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof UserEntityWorkspacesInner
     */
    'type': UserEntityWorkspacesInnerTypeEnum;
    /**
     *
     * @type {string}
     * @memberof UserEntityWorkspacesInner
     */
    'creatorUserId': string;
    /**
     *
     * @type {string}
     * @memberof UserEntityWorkspacesInner
     */
    'selectedPersonalCategoryTreeId'?: string | null;
    /**
     *
     * @type {string}
     * @memberof UserEntityWorkspacesInner
     */
    'selectedBusinessCategoryTreeId'?: string | null;
    /**
     *
     * @type {UserEntityWorkspacesInnerHybridSettings}
     * @memberof UserEntityWorkspacesInner
     */
    'hybridSettings'?: UserEntityWorkspacesInnerHybridSettings | null;
    /**
     *
     * @type {UserEntityWorkspacesInnerHybridSettings}
     * @memberof UserEntityWorkspacesInner
     */
    'businessSettings'?: UserEntityWorkspacesInnerHybridSettings | null;
    /**
     *
     * @type {UserEntityWorkspacesInnerPersonalSettings}
     * @memberof UserEntityWorkspacesInner
     */
    'personalSettings'?: UserEntityWorkspacesInnerPersonalSettings | null;
    /**
     *
     * @type {string}
     * @memberof UserEntityWorkspacesInner
     */
    'createdAt': string;
}
export declare const UserEntityWorkspacesInnerTypeEnum: {
    readonly Personal: "PERSONAL";
    readonly Business: "BUSINESS";
    readonly Hybrid: "HYBRID";
};
export type UserEntityWorkspacesInnerTypeEnum = typeof UserEntityWorkspacesInnerTypeEnum[keyof typeof UserEntityWorkspacesInnerTypeEnum];
/**
 *
 * @export
 * @interface UserEntityWorkspacesInnerHybridSettings
 */
export interface UserEntityWorkspacesInnerHybridSettings {
    /**
     *
     * @type {string}
     * @memberof UserEntityWorkspacesInnerHybridSettings
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof UserEntityWorkspacesInnerHybridSettings
     */
    'businessSegment': UserEntityWorkspacesInnerHybridSettingsBusinessSegmentEnum;
    /**
     *
     * @type {string}
     * @memberof UserEntityWorkspacesInnerHybridSettings
     */
    'otherBusinessDescription'?: string | null;
}
export declare const UserEntityWorkspacesInnerHybridSettingsBusinessSegmentEnum: {
    readonly Attorney: "ATTORNEY";
    readonly Architect: "ARCHITECT";
    readonly Consultant: "CONSULTANT";
    readonly Realtor: "REALTOR";
    readonly InsuranceBroker: "INSURANCE_BROKER";
    readonly Dentist: "DENTIST";
    readonly Physiotherapist: "PHYSIOTHERAPIST";
    readonly Physician: "PHYSICIAN";
    readonly Tutor: "TUTOR";
    readonly Psychologist: "PSYCHOLOGIST";
    readonly Other: "OTHER";
};
export type UserEntityWorkspacesInnerHybridSettingsBusinessSegmentEnum = typeof UserEntityWorkspacesInnerHybridSettingsBusinessSegmentEnum[keyof typeof UserEntityWorkspacesInnerHybridSettingsBusinessSegmentEnum];
/**
 *
 * @export
 * @interface UserEntityWorkspacesInnerPersonalSettings
 */
export interface UserEntityWorkspacesInnerPersonalSettings {
    /**
     *
     * @type {string}
     * @memberof UserEntityWorkspacesInnerPersonalSettings
     */
    'id': string;
}
/**
 *
 * @export
 * @interface UserRelatedWorkspaceEntity
 */
export interface UserRelatedWorkspaceEntity {
    /**
     *
     * @type {UserEntityWorkspacesInner}
     * @memberof UserRelatedWorkspaceEntity
     */
    'workspace': UserEntityWorkspacesInner;
    /**
     *
     * @type {string}
     * @memberof UserRelatedWorkspaceEntity
     */
    'relationType': UserRelatedWorkspaceEntityRelationTypeEnum;
}
export declare const UserRelatedWorkspaceEntityRelationTypeEnum: {
    readonly Approved: "APPROVED";
    readonly WaitingApproval: "WAITING_APPROVAL";
};
export type UserRelatedWorkspaceEntityRelationTypeEnum = typeof UserRelatedWorkspaceEntityRelationTypeEnum[keyof typeof UserRelatedWorkspaceEntityRelationTypeEnum];
/**
 *
 * @export
 * @interface VerifyEmailVerificationCodeRequestDto
 */
export interface VerifyEmailVerificationCodeRequestDto {
    /**
     *
     * @type {string}
     * @memberof VerifyEmailVerificationCodeRequestDto
     */
    'email': string;
    /**
     *
     * @type {string}
     * @memberof VerifyEmailVerificationCodeRequestDto
     */
    'purpose': VerifyEmailVerificationCodeRequestDtoPurposeEnum;
    /**
     *
     * @type {string}
     * @memberof VerifyEmailVerificationCodeRequestDto
     */
    'code': string;
}
export declare const VerifyEmailVerificationCodeRequestDtoPurposeEnum: {
    readonly Up: "SIGN_UP";
    readonly In: "SIGN_IN";
};
export type VerifyEmailVerificationCodeRequestDtoPurposeEnum = typeof VerifyEmailVerificationCodeRequestDtoPurposeEnum[keyof typeof VerifyEmailVerificationCodeRequestDtoPurposeEnum];
/**
 *
 * @export
 * @interface VerifyPhoneVerificationCodeRequestDto
 */
export interface VerifyPhoneVerificationCodeRequestDto {
    /**
     *
     * @type {string}
     * @memberof VerifyPhoneVerificationCodeRequestDto
     */
    'phone': string;
    /**
     *
     * @type {string}
     * @memberof VerifyPhoneVerificationCodeRequestDto
     */
    'purpose': VerifyPhoneVerificationCodeRequestDtoPurposeEnum;
    /**
     *
     * @type {string}
     * @memberof VerifyPhoneVerificationCodeRequestDto
     */
    'code': string;
}
export declare const VerifyPhoneVerificationCodeRequestDtoPurposeEnum: {
    readonly Up: "SIGN_UP";
    readonly In: "SIGN_IN";
};
export type VerifyPhoneVerificationCodeRequestDtoPurposeEnum = typeof VerifyPhoneVerificationCodeRequestDtoPurposeEnum[keyof typeof VerifyPhoneVerificationCodeRequestDtoPurposeEnum];
/**
 *
 * @export
 * @interface WorkspaceEntity
 */
export interface WorkspaceEntity {
    /**
     *
     * @type {string}
     * @memberof WorkspaceEntity
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof WorkspaceEntity
     */
    'prettyId': string;
    /**
     *
     * @type {string}
     * @memberof WorkspaceEntity
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof WorkspaceEntity
     */
    'type': WorkspaceEntityTypeEnum;
    /**
     *
     * @type {string}
     * @memberof WorkspaceEntity
     */
    'creatorUserId': string;
    /**
     *
     * @type {string}
     * @memberof WorkspaceEntity
     */
    'selectedPersonalCategoryTreeId'?: string | null;
    /**
     *
     * @type {string}
     * @memberof WorkspaceEntity
     */
    'selectedBusinessCategoryTreeId'?: string | null;
    /**
     *
     * @type {UserEntityWorkspacesInnerHybridSettings}
     * @memberof WorkspaceEntity
     */
    'hybridSettings'?: UserEntityWorkspacesInnerHybridSettings | null;
    /**
     *
     * @type {UserEntityWorkspacesInnerHybridSettings}
     * @memberof WorkspaceEntity
     */
    'businessSettings'?: UserEntityWorkspacesInnerHybridSettings | null;
    /**
     *
     * @type {UserEntityWorkspacesInnerPersonalSettings}
     * @memberof WorkspaceEntity
     */
    'personalSettings'?: UserEntityWorkspacesInnerPersonalSettings | null;
    /**
     *
     * @type {string}
     * @memberof WorkspaceEntity
     */
    'createdAt': string;
}
export declare const WorkspaceEntityTypeEnum: {
    readonly Personal: "PERSONAL";
    readonly Business: "BUSINESS";
    readonly Hybrid: "HYBRID";
};
export type WorkspaceEntityTypeEnum = typeof WorkspaceEntityTypeEnum[keyof typeof WorkspaceEntityTypeEnum];
/**
 * AuthApi - axios parameter creator
 * @export
 */
export declare const AuthApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {GenerateAndSendEmailVerificationCodeRequestDto} generateAndSendEmailVerificationCodeRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerGenerateAndSendEmailVerificationCode: (generateAndSendEmailVerificationCodeRequestDto: GenerateAndSendEmailVerificationCodeRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {GenerateAndSendPhoneVerificationCodeRequestDto} generateAndSendPhoneVerificationCodeRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerGenerateAndSendPhoneVerificationCode: (generateAndSendPhoneVerificationCodeRequestDto: GenerateAndSendPhoneVerificationCodeRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {GenerateEmailInUseReportRequestDto} generateEmailInUseReportRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerGenerateEmailInUseReport: (generateEmailInUseReportRequestDto: GenerateEmailInUseReportRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {GeneratePhoneInUseReportRequestDto} generatePhoneInUseReportRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerGeneratePhoneInUseReport: (generatePhoneInUseReportRequestDto: GeneratePhoneInUseReportRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerGetMe: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {RefreshRequestDto} refreshRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerRefresh: (refreshRequestDto: RefreshRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SignInWithEmailRequestDto} signInWithEmailRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerSignInWithEmail: (signInWithEmailRequestDto: SignInWithEmailRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SignUpWithEmailRequestDto} signUpWithEmailRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerSignUpWithEmail: (signUpWithEmailRequestDto: SignUpWithEmailRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {VerifyEmailVerificationCodeRequestDto} verifyEmailVerificationCodeRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerVerifyEmailVerificationCode: (verifyEmailVerificationCodeRequestDto: VerifyEmailVerificationCodeRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {VerifyPhoneVerificationCodeRequestDto} verifyPhoneVerificationCodeRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerVerifyPhoneVerificationCode: (verifyPhoneVerificationCodeRequestDto: VerifyPhoneVerificationCodeRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AuthApi - functional programming interface
 * @export
 */
export declare const AuthApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {GenerateAndSendEmailVerificationCodeRequestDto} generateAndSendEmailVerificationCodeRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerGenerateAndSendEmailVerificationCode(generateAndSendEmailVerificationCodeRequestDto: GenerateAndSendEmailVerificationCodeRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {GenerateAndSendPhoneVerificationCodeRequestDto} generateAndSendPhoneVerificationCodeRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerGenerateAndSendPhoneVerificationCode(generateAndSendPhoneVerificationCodeRequestDto: GenerateAndSendPhoneVerificationCodeRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {GenerateEmailInUseReportRequestDto} generateEmailInUseReportRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerGenerateEmailInUseReport(generateEmailInUseReportRequestDto: GenerateEmailInUseReportRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EmailInUseReportEntity>>;
    /**
     *
     * @param {GeneratePhoneInUseReportRequestDto} generatePhoneInUseReportRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerGeneratePhoneInUseReport(generatePhoneInUseReportRequestDto: GeneratePhoneInUseReportRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EmailInUseReportEntity>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerGetMe(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserEntity>>;
    /**
     *
     * @param {RefreshRequestDto} refreshRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerRefresh(refreshRequestDto: RefreshRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CredentialsEntity>>;
    /**
     *
     * @param {SignInWithEmailRequestDto} signInWithEmailRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerSignInWithEmail(signInWithEmailRequestDto: SignInWithEmailRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CredentialsEntity>>;
    /**
     *
     * @param {SignUpWithEmailRequestDto} signUpWithEmailRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerSignUpWithEmail(signUpWithEmailRequestDto: SignUpWithEmailRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserEntity>>;
    /**
     *
     * @param {VerifyEmailVerificationCodeRequestDto} verifyEmailVerificationCodeRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerVerifyEmailVerificationCode(verifyEmailVerificationCodeRequestDto: VerifyEmailVerificationCodeRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {VerifyPhoneVerificationCodeRequestDto} verifyPhoneVerificationCodeRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerVerifyPhoneVerificationCode(verifyPhoneVerificationCodeRequestDto: VerifyPhoneVerificationCodeRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * AuthApi - factory interface
 * @export
 */
export declare const AuthApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {GenerateAndSendEmailVerificationCodeRequestDto} generateAndSendEmailVerificationCodeRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerGenerateAndSendEmailVerificationCode(generateAndSendEmailVerificationCodeRequestDto: GenerateAndSendEmailVerificationCodeRequestDto, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {GenerateAndSendPhoneVerificationCodeRequestDto} generateAndSendPhoneVerificationCodeRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerGenerateAndSendPhoneVerificationCode(generateAndSendPhoneVerificationCodeRequestDto: GenerateAndSendPhoneVerificationCodeRequestDto, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {GenerateEmailInUseReportRequestDto} generateEmailInUseReportRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerGenerateEmailInUseReport(generateEmailInUseReportRequestDto: GenerateEmailInUseReportRequestDto, options?: any): AxiosPromise<EmailInUseReportEntity>;
    /**
     *
     * @param {GeneratePhoneInUseReportRequestDto} generatePhoneInUseReportRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerGeneratePhoneInUseReport(generatePhoneInUseReportRequestDto: GeneratePhoneInUseReportRequestDto, options?: any): AxiosPromise<EmailInUseReportEntity>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerGetMe(options?: any): AxiosPromise<UserEntity>;
    /**
     *
     * @param {RefreshRequestDto} refreshRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerRefresh(refreshRequestDto: RefreshRequestDto, options?: any): AxiosPromise<CredentialsEntity>;
    /**
     *
     * @param {SignInWithEmailRequestDto} signInWithEmailRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerSignInWithEmail(signInWithEmailRequestDto: SignInWithEmailRequestDto, options?: any): AxiosPromise<CredentialsEntity>;
    /**
     *
     * @param {SignUpWithEmailRequestDto} signUpWithEmailRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerSignUpWithEmail(signUpWithEmailRequestDto: SignUpWithEmailRequestDto, options?: any): AxiosPromise<UserEntity>;
    /**
     *
     * @param {VerifyEmailVerificationCodeRequestDto} verifyEmailVerificationCodeRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerVerifyEmailVerificationCode(verifyEmailVerificationCodeRequestDto: VerifyEmailVerificationCodeRequestDto, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {VerifyPhoneVerificationCodeRequestDto} verifyPhoneVerificationCodeRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerVerifyPhoneVerificationCode(verifyPhoneVerificationCodeRequestDto: VerifyPhoneVerificationCodeRequestDto, options?: any): AxiosPromise<void>;
};
/**
 * AuthApi - object-oriented interface
 * @export
 * @class AuthApi
 * @extends {BaseAPI}
 */
export declare class AuthApi extends BaseAPI {
    /**
     *
     * @param {GenerateAndSendEmailVerificationCodeRequestDto} generateAndSendEmailVerificationCodeRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApi
     */
    authControllerGenerateAndSendEmailVerificationCode(generateAndSendEmailVerificationCodeRequestDto: GenerateAndSendEmailVerificationCodeRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {GenerateAndSendPhoneVerificationCodeRequestDto} generateAndSendPhoneVerificationCodeRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApi
     */
    authControllerGenerateAndSendPhoneVerificationCode(generateAndSendPhoneVerificationCodeRequestDto: GenerateAndSendPhoneVerificationCodeRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {GenerateEmailInUseReportRequestDto} generateEmailInUseReportRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApi
     */
    authControllerGenerateEmailInUseReport(generateEmailInUseReportRequestDto: GenerateEmailInUseReportRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<EmailInUseReportEntity, any>>;
    /**
     *
     * @param {GeneratePhoneInUseReportRequestDto} generatePhoneInUseReportRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApi
     */
    authControllerGeneratePhoneInUseReport(generatePhoneInUseReportRequestDto: GeneratePhoneInUseReportRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<EmailInUseReportEntity, any>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApi
     */
    authControllerGetMe(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<UserEntity, any>>;
    /**
     *
     * @param {RefreshRequestDto} refreshRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApi
     */
    authControllerRefresh(refreshRequestDto: RefreshRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CredentialsEntity, any>>;
    /**
     *
     * @param {SignInWithEmailRequestDto} signInWithEmailRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApi
     */
    authControllerSignInWithEmail(signInWithEmailRequestDto: SignInWithEmailRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CredentialsEntity, any>>;
    /**
     *
     * @param {SignUpWithEmailRequestDto} signUpWithEmailRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApi
     */
    authControllerSignUpWithEmail(signUpWithEmailRequestDto: SignUpWithEmailRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<UserEntity, any>>;
    /**
     *
     * @param {VerifyEmailVerificationCodeRequestDto} verifyEmailVerificationCodeRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApi
     */
    authControllerVerifyEmailVerificationCode(verifyEmailVerificationCodeRequestDto: VerifyEmailVerificationCodeRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {VerifyPhoneVerificationCodeRequestDto} verifyPhoneVerificationCodeRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApi
     */
    authControllerVerifyPhoneVerificationCode(verifyPhoneVerificationCodeRequestDto: VerifyPhoneVerificationCodeRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * BankAccountsApi - axios parameter creator
 * @export
 */
export declare const BankAccountsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} bankAccountId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerActivate: (bankAccountId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {CreateOrUpdateBankAccountRequestDto} createOrUpdateBankAccountRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerCreateOrUpdate: (createOrUpdateBankAccountRequestDto: CreateOrUpdateBankAccountRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} workspaceId
     * @param {boolean} [enabled]
     * @param {string} [types]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerCreateWorkspaceBalanceReport: (workspaceId: string, enabled?: boolean, types?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} bankAccountId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerDisable: (bankAccountId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} bankAccountId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerGetById: (bankAccountId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} bankConnectionId
     * @param {boolean} [enabled]
     * @param {string} [types]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerListByBankConnectionId: (bankConnectionId: string, enabled?: boolean, types?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} workspaceId
     * @param {boolean} [enabled]
     * @param {string} [types]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerListByWorkspaceId: (workspaceId: string, enabled?: boolean, types?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BankAccountsApi - functional programming interface
 * @export
 */
export declare const BankAccountsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} bankAccountId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerActivate(bankAccountId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BankAccountEntity>>;
    /**
     *
     * @param {CreateOrUpdateBankAccountRequestDto} createOrUpdateBankAccountRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerCreateOrUpdate(createOrUpdateBankAccountRequestDto: CreateOrUpdateBankAccountRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BankAccountEntity>>;
    /**
     *
     * @param {string} workspaceId
     * @param {boolean} [enabled]
     * @param {string} [types]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerCreateWorkspaceBalanceReport(workspaceId: string, enabled?: boolean, types?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BankAccountsBalanceReportEntity>>;
    /**
     *
     * @param {string} bankAccountId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerDisable(bankAccountId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BankAccountEntity>>;
    /**
     *
     * @param {string} bankAccountId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerGetById(bankAccountId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BankAccountEntity>>;
    /**
     *
     * @param {string} bankConnectionId
     * @param {boolean} [enabled]
     * @param {string} [types]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerListByBankConnectionId(bankConnectionId: string, enabled?: boolean, types?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<BankAccountEntity>>>;
    /**
     *
     * @param {string} workspaceId
     * @param {boolean} [enabled]
     * @param {string} [types]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerListByWorkspaceId(workspaceId: string, enabled?: boolean, types?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<BankAccountEntity>>>;
};
/**
 * BankAccountsApi - factory interface
 * @export
 */
export declare const BankAccountsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} bankAccountId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerActivate(bankAccountId: string, options?: any): AxiosPromise<BankAccountEntity>;
    /**
     *
     * @param {CreateOrUpdateBankAccountRequestDto} createOrUpdateBankAccountRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerCreateOrUpdate(createOrUpdateBankAccountRequestDto: CreateOrUpdateBankAccountRequestDto, options?: any): AxiosPromise<BankAccountEntity>;
    /**
     *
     * @param {string} workspaceId
     * @param {boolean} [enabled]
     * @param {string} [types]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerCreateWorkspaceBalanceReport(workspaceId: string, enabled?: boolean, types?: string, options?: any): AxiosPromise<BankAccountsBalanceReportEntity>;
    /**
     *
     * @param {string} bankAccountId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerDisable(bankAccountId: string, options?: any): AxiosPromise<BankAccountEntity>;
    /**
     *
     * @param {string} bankAccountId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerGetById(bankAccountId: string, options?: any): AxiosPromise<BankAccountEntity>;
    /**
     *
     * @param {string} bankConnectionId
     * @param {boolean} [enabled]
     * @param {string} [types]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerListByBankConnectionId(bankConnectionId: string, enabled?: boolean, types?: string, options?: any): AxiosPromise<Array<BankAccountEntity>>;
    /**
     *
     * @param {string} workspaceId
     * @param {boolean} [enabled]
     * @param {string} [types]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankAccountsControllerListByWorkspaceId(workspaceId: string, enabled?: boolean, types?: string, options?: any): AxiosPromise<Array<BankAccountEntity>>;
};
/**
 * BankAccountsApi - object-oriented interface
 * @export
 * @class BankAccountsApi
 * @extends {BaseAPI}
 */
export declare class BankAccountsApi extends BaseAPI {
    /**
     *
     * @param {string} bankAccountId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankAccountsApi
     */
    bankAccountsControllerActivate(bankAccountId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankAccountEntity, any>>;
    /**
     *
     * @param {CreateOrUpdateBankAccountRequestDto} createOrUpdateBankAccountRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankAccountsApi
     */
    bankAccountsControllerCreateOrUpdate(createOrUpdateBankAccountRequestDto: CreateOrUpdateBankAccountRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankAccountEntity, any>>;
    /**
     *
     * @param {string} workspaceId
     * @param {boolean} [enabled]
     * @param {string} [types]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankAccountsApi
     */
    bankAccountsControllerCreateWorkspaceBalanceReport(workspaceId: string, enabled?: boolean, types?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankAccountsBalanceReportEntity, any>>;
    /**
     *
     * @param {string} bankAccountId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankAccountsApi
     */
    bankAccountsControllerDisable(bankAccountId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankAccountEntity, any>>;
    /**
     *
     * @param {string} bankAccountId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankAccountsApi
     */
    bankAccountsControllerGetById(bankAccountId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankAccountEntity, any>>;
    /**
     *
     * @param {string} bankConnectionId
     * @param {boolean} [enabled]
     * @param {string} [types]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankAccountsApi
     */
    bankAccountsControllerListByBankConnectionId(bankConnectionId: string, enabled?: boolean, types?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankAccountEntity[], any>>;
    /**
     *
     * @param {string} workspaceId
     * @param {boolean} [enabled]
     * @param {string} [types]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankAccountsApi
     */
    bankAccountsControllerListByWorkspaceId(workspaceId: string, enabled?: boolean, types?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankAccountEntity[], any>>;
}
/**
 * BankConnectionsApi - axios parameter creator
 * @export
 */
export declare const BankConnectionsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} bankConnectionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankConnectionsControllerActivate: (bankConnectionId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} workspaceId
     * @param {CreateOrUpdateBankConnectionRequestDto} createOrUpdateBankConnectionRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankConnectionsControllerCreateOrUpdate: (workspaceId: string, createOrUpdateBankConnectionRequestDto: CreateOrUpdateBankConnectionRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} bankConnectionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankConnectionsControllerDisable: (bankConnectionId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} bankConnectionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankConnectionsControllerGetById: (bankConnectionId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} workspaceId
     * @param {boolean} [enabled]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankConnectionsControllerList: (workspaceId: string, enabled?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BankConnectionsApi - functional programming interface
 * @export
 */
export declare const BankConnectionsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} bankConnectionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankConnectionsControllerActivate(bankConnectionId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BankConnectionEntity>>;
    /**
     *
     * @param {string} workspaceId
     * @param {CreateOrUpdateBankConnectionRequestDto} createOrUpdateBankConnectionRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankConnectionsControllerCreateOrUpdate(workspaceId: string, createOrUpdateBankConnectionRequestDto: CreateOrUpdateBankConnectionRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BankConnectionEntity>>;
    /**
     *
     * @param {string} bankConnectionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankConnectionsControllerDisable(bankConnectionId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BankConnectionEntity>>;
    /**
     *
     * @param {string} bankConnectionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankConnectionsControllerGetById(bankConnectionId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BankConnectionEntity>>;
    /**
     *
     * @param {string} workspaceId
     * @param {boolean} [enabled]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankConnectionsControllerList(workspaceId: string, enabled?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<BankConnectionEntity>>>;
};
/**
 * BankConnectionsApi - factory interface
 * @export
 */
export declare const BankConnectionsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} bankConnectionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankConnectionsControllerActivate(bankConnectionId: string, options?: any): AxiosPromise<BankConnectionEntity>;
    /**
     *
     * @param {string} workspaceId
     * @param {CreateOrUpdateBankConnectionRequestDto} createOrUpdateBankConnectionRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankConnectionsControllerCreateOrUpdate(workspaceId: string, createOrUpdateBankConnectionRequestDto: CreateOrUpdateBankConnectionRequestDto, options?: any): AxiosPromise<BankConnectionEntity>;
    /**
     *
     * @param {string} bankConnectionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankConnectionsControllerDisable(bankConnectionId: string, options?: any): AxiosPromise<BankConnectionEntity>;
    /**
     *
     * @param {string} bankConnectionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankConnectionsControllerGetById(bankConnectionId: string, options?: any): AxiosPromise<BankConnectionEntity>;
    /**
     *
     * @param {string} workspaceId
     * @param {boolean} [enabled]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankConnectionsControllerList(workspaceId: string, enabled?: boolean, options?: any): AxiosPromise<Array<BankConnectionEntity>>;
};
/**
 * BankConnectionsApi - object-oriented interface
 * @export
 * @class BankConnectionsApi
 * @extends {BaseAPI}
 */
export declare class BankConnectionsApi extends BaseAPI {
    /**
     *
     * @param {string} bankConnectionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankConnectionsApi
     */
    bankConnectionsControllerActivate(bankConnectionId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankConnectionEntity, any>>;
    /**
     *
     * @param {string} workspaceId
     * @param {CreateOrUpdateBankConnectionRequestDto} createOrUpdateBankConnectionRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankConnectionsApi
     */
    bankConnectionsControllerCreateOrUpdate(workspaceId: string, createOrUpdateBankConnectionRequestDto: CreateOrUpdateBankConnectionRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankConnectionEntity, any>>;
    /**
     *
     * @param {string} bankConnectionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankConnectionsApi
     */
    bankConnectionsControllerDisable(bankConnectionId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankConnectionEntity, any>>;
    /**
     *
     * @param {string} bankConnectionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankConnectionsApi
     */
    bankConnectionsControllerGetById(bankConnectionId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankConnectionEntity, any>>;
    /**
     *
     * @param {string} workspaceId
     * @param {boolean} [enabled]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankConnectionsApi
     */
    bankConnectionsControllerList(workspaceId: string, enabled?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankConnectionEntity[], any>>;
}
/**
 * BankSyncApi - axios parameter creator
 * @export
 */
export declare const BankSyncApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {SyncBankAccountTransactionsRequestDto} syncBankAccountTransactionsRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankSyncControllerSyncAccountTransactions: (syncBankAccountTransactionsRequestDto: SyncBankAccountTransactionsRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SyncBankItemRequestDto} syncBankItemRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankSyncControllerSyncItem: (syncBankItemRequestDto: SyncBankItemRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SyncBankAccountTransactionsPageBeginRequestDto} syncBankAccountTransactionsPageBeginRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankSyncControllerSyncTransactionsPageBegin: (syncBankAccountTransactionsPageBeginRequestDto: SyncBankAccountTransactionsPageBeginRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SyncBankAccountTransactionsPageEndRequestDto} syncBankAccountTransactionsPageEndRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankSyncControllerSyncTransactionsPageEnd: (syncBankAccountTransactionsPageEndRequestDto: SyncBankAccountTransactionsPageEndRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BankSyncApi - functional programming interface
 * @export
 */
export declare const BankSyncApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {SyncBankAccountTransactionsRequestDto} syncBankAccountTransactionsRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankSyncControllerSyncAccountTransactions(syncBankAccountTransactionsRequestDto: SyncBankAccountTransactionsRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {SyncBankItemRequestDto} syncBankItemRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankSyncControllerSyncItem(syncBankItemRequestDto: SyncBankItemRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {SyncBankAccountTransactionsPageBeginRequestDto} syncBankAccountTransactionsPageBeginRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankSyncControllerSyncTransactionsPageBegin(syncBankAccountTransactionsPageBeginRequestDto: SyncBankAccountTransactionsPageBeginRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {SyncBankAccountTransactionsPageEndRequestDto} syncBankAccountTransactionsPageEndRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankSyncControllerSyncTransactionsPageEnd(syncBankAccountTransactionsPageEndRequestDto: SyncBankAccountTransactionsPageEndRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * BankSyncApi - factory interface
 * @export
 */
export declare const BankSyncApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {SyncBankAccountTransactionsRequestDto} syncBankAccountTransactionsRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankSyncControllerSyncAccountTransactions(syncBankAccountTransactionsRequestDto: SyncBankAccountTransactionsRequestDto, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {SyncBankItemRequestDto} syncBankItemRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankSyncControllerSyncItem(syncBankItemRequestDto: SyncBankItemRequestDto, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {SyncBankAccountTransactionsPageBeginRequestDto} syncBankAccountTransactionsPageBeginRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankSyncControllerSyncTransactionsPageBegin(syncBankAccountTransactionsPageBeginRequestDto: SyncBankAccountTransactionsPageBeginRequestDto, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {SyncBankAccountTransactionsPageEndRequestDto} syncBankAccountTransactionsPageEndRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankSyncControllerSyncTransactionsPageEnd(syncBankAccountTransactionsPageEndRequestDto: SyncBankAccountTransactionsPageEndRequestDto, options?: any): AxiosPromise<void>;
};
/**
 * BankSyncApi - object-oriented interface
 * @export
 * @class BankSyncApi
 * @extends {BaseAPI}
 */
export declare class BankSyncApi extends BaseAPI {
    /**
     *
     * @param {SyncBankAccountTransactionsRequestDto} syncBankAccountTransactionsRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankSyncApi
     */
    bankSyncControllerSyncAccountTransactions(syncBankAccountTransactionsRequestDto: SyncBankAccountTransactionsRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {SyncBankItemRequestDto} syncBankItemRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankSyncApi
     */
    bankSyncControllerSyncItem(syncBankItemRequestDto: SyncBankItemRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {SyncBankAccountTransactionsPageBeginRequestDto} syncBankAccountTransactionsPageBeginRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankSyncApi
     */
    bankSyncControllerSyncTransactionsPageBegin(syncBankAccountTransactionsPageBeginRequestDto: SyncBankAccountTransactionsPageBeginRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {SyncBankAccountTransactionsPageEndRequestDto} syncBankAccountTransactionsPageEndRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankSyncApi
     */
    bankSyncControllerSyncTransactionsPageEnd(syncBankAccountTransactionsPageEndRequestDto: SyncBankAccountTransactionsPageEndRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * BankTransactionCategoriesApi - axios parameter creator
 * @export
 */
export declare const BankTransactionCategoriesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} workspaceId
     * @param {boolean} [onlyLeafs]
     * @param {string} [directionNatures]
     * @param {string} [legalNatures]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionCategoriesControllerList: (workspaceId: string, onlyLeafs?: boolean, directionNatures?: string, legalNatures?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BankTransactionCategoriesApi - functional programming interface
 * @export
 */
export declare const BankTransactionCategoriesApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} workspaceId
     * @param {boolean} [onlyLeafs]
     * @param {string} [directionNatures]
     * @param {string} [legalNatures]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionCategoriesControllerList(workspaceId: string, onlyLeafs?: boolean, directionNatures?: string, legalNatures?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<BankTransactionCategoryEntity>>>;
};
/**
 * BankTransactionCategoriesApi - factory interface
 * @export
 */
export declare const BankTransactionCategoriesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} workspaceId
     * @param {boolean} [onlyLeafs]
     * @param {string} [directionNatures]
     * @param {string} [legalNatures]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionCategoriesControllerList(workspaceId: string, onlyLeafs?: boolean, directionNatures?: string, legalNatures?: string, options?: any): AxiosPromise<Array<BankTransactionCategoryEntity>>;
};
/**
 * BankTransactionCategoriesApi - object-oriented interface
 * @export
 * @class BankTransactionCategoriesApi
 * @extends {BaseAPI}
 */
export declare class BankTransactionCategoriesApi extends BaseAPI {
    /**
     *
     * @param {string} workspaceId
     * @param {boolean} [onlyLeafs]
     * @param {string} [directionNatures]
     * @param {string} [legalNatures]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankTransactionCategoriesApi
     */
    bankTransactionCategoriesControllerList(workspaceId: string, onlyLeafs?: boolean, directionNatures?: string, legalNatures?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankTransactionCategoryEntity[], any>>;
}
/**
 * BankTransactionTagsApi - axios parameter creator
 * @export
 */
export declare const BankTransactionTagsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} workspaceId
     * @param {CreateBankTransactionTagRequestDto} createBankTransactionTagRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionTagsControllerCreate: (workspaceId: string, createBankTransactionTagRequestDto: CreateBankTransactionTagRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} workspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionTagsControllerList: (workspaceId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BankTransactionTagsApi - functional programming interface
 * @export
 */
export declare const BankTransactionTagsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} workspaceId
     * @param {CreateBankTransactionTagRequestDto} createBankTransactionTagRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionTagsControllerCreate(workspaceId: string, createBankTransactionTagRequestDto: CreateBankTransactionTagRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BankTransactionTagEntity>>;
    /**
     *
     * @param {string} workspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionTagsControllerList(workspaceId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<BankTransactionTagEntity>>>;
};
/**
 * BankTransactionTagsApi - factory interface
 * @export
 */
export declare const BankTransactionTagsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} workspaceId
     * @param {CreateBankTransactionTagRequestDto} createBankTransactionTagRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionTagsControllerCreate(workspaceId: string, createBankTransactionTagRequestDto: CreateBankTransactionTagRequestDto, options?: any): AxiosPromise<BankTransactionTagEntity>;
    /**
     *
     * @param {string} workspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionTagsControllerList(workspaceId: string, options?: any): AxiosPromise<Array<BankTransactionTagEntity>>;
};
/**
 * BankTransactionTagsApi - object-oriented interface
 * @export
 * @class BankTransactionTagsApi
 * @extends {BaseAPI}
 */
export declare class BankTransactionTagsApi extends BaseAPI {
    /**
     *
     * @param {string} workspaceId
     * @param {CreateBankTransactionTagRequestDto} createBankTransactionTagRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankTransactionTagsApi
     */
    bankTransactionTagsControllerCreate(workspaceId: string, createBankTransactionTagRequestDto: CreateBankTransactionTagRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankTransactionTagEntity, any>>;
    /**
     *
     * @param {string} workspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankTransactionTagsApi
     */
    bankTransactionTagsControllerList(workspaceId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankTransactionTagEntity[], any>>;
}
/**
 * BankTransactionsApi - axios parameter creator
 * @export
 */
export declare const BankTransactionsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {CreateOrUpdateBankTransactionsInBulkRequestDto} createOrUpdateBankTransactionsInBulkRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerCreateOrUpdateInBulk: (createOrUpdateBankTransactionsInBulkRequestDto: CreateOrUpdateBankTransactionsInBulkRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} bankTransactionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerGetById: (bankTransactionId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} accountId
     * @param {string} provider
     * @param {string} providerTransactionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerGetByProvider: (accountId: string, provider: string, providerTransactionId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [categoryIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {string} [directionNatures]
     * @param {string} [minPostedDatetime]
     * @param {string} [maxPostedDatetime]
     * @param {string} [minCompetencyDatetime]
     * @param {string} [maxCompetencyDatetime]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [considerAutomaticApplicationRelated]
     * @param {boolean} [considerInternalTransfers]
     * @param {string} [considerInvoiceRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerGetTotals: (workspaceId: string, accountIds?: string, categoryIds?: string, tagIds?: string, legalNatures?: string, directionNatures?: string, minPostedDatetime?: string, maxPostedDatetime?: string, minCompetencyDatetime?: string, maxCompetencyDatetime?: string, considerIgnored?: boolean, considerAutomaticApplicationRelated?: boolean, considerInternalTransfers?: boolean, considerInvoiceRelated?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} workspaceId
     * @param {number} [pageIndex]
     * @param {number} [pageSize]
     * @param {string} [accountIds]
     * @param {string} [categoryIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {string} [directionNatures]
     * @param {string} [minPostedDatetime]
     * @param {string} [maxPostedDatetime]
     * @param {string} [minCompetencyDatetime]
     * @param {string} [maxCompetencyDatetime]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [considerAutomaticApplicationRelated]
     * @param {boolean} [considerInternalTransfers]
     * @param {string} [considerInvoiceRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerList: (workspaceId: string, pageIndex?: number, pageSize?: number, accountIds?: string, categoryIds?: string, tagIds?: string, legalNatures?: string, directionNatures?: string, minPostedDatetime?: string, maxPostedDatetime?: string, minCompetencyDatetime?: string, maxCompetencyDatetime?: string, considerIgnored?: boolean, considerAutomaticApplicationRelated?: boolean, considerInternalTransfers?: boolean, considerInvoiceRelated?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} workspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerListMostRecent: (workspaceId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} workspaceId
     * @param {number} [pageIndex]
     * @param {number} [pageSize]
     * @param {boolean} [considerIgnored]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerListNotVerified: (workspaceId: string, pageIndex?: number, pageSize?: number, considerIgnored?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} fromDatetime
     * @param {string} toDatetime
     * @param {number} [pageIndex]
     * @param {number} [pageSize]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerListVerifiedByMe: (workspaceId: string, fromDatetime: string, toDatetime: string, pageIndex?: number, pageSize?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} bankTransactionId
     * @param {PartialUpdateBankTransactionRequestDto} partialUpdateBankTransactionRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerPartialUpdate: (bankTransactionId: string, partialUpdateBankTransactionRequestDto: PartialUpdateBankTransactionRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BankTransactionsApi - functional programming interface
 * @export
 */
export declare const BankTransactionsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {CreateOrUpdateBankTransactionsInBulkRequestDto} createOrUpdateBankTransactionsInBulkRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerCreateOrUpdateInBulk(createOrUpdateBankTransactionsInBulkRequestDto: CreateOrUpdateBankTransactionsInBulkRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<BankTransactionEntity>>>;
    /**
     *
     * @param {string} bankTransactionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerGetById(bankTransactionId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BankTransactionEntity>>;
    /**
     *
     * @param {string} accountId
     * @param {string} provider
     * @param {string} providerTransactionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerGetByProvider(accountId: string, provider: string, providerTransactionId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BankTransactionEntity>>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [categoryIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {string} [directionNatures]
     * @param {string} [minPostedDatetime]
     * @param {string} [maxPostedDatetime]
     * @param {string} [minCompetencyDatetime]
     * @param {string} [maxCompetencyDatetime]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [considerAutomaticApplicationRelated]
     * @param {boolean} [considerInternalTransfers]
     * @param {string} [considerInvoiceRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerGetTotals(workspaceId: string, accountIds?: string, categoryIds?: string, tagIds?: string, legalNatures?: string, directionNatures?: string, minPostedDatetime?: string, maxPostedDatetime?: string, minCompetencyDatetime?: string, maxCompetencyDatetime?: string, considerIgnored?: boolean, considerAutomaticApplicationRelated?: boolean, considerInternalTransfers?: boolean, considerInvoiceRelated?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BankTransactionsPageEntity>>;
    /**
     *
     * @param {string} workspaceId
     * @param {number} [pageIndex]
     * @param {number} [pageSize]
     * @param {string} [accountIds]
     * @param {string} [categoryIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {string} [directionNatures]
     * @param {string} [minPostedDatetime]
     * @param {string} [maxPostedDatetime]
     * @param {string} [minCompetencyDatetime]
     * @param {string} [maxCompetencyDatetime]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [considerAutomaticApplicationRelated]
     * @param {boolean} [considerInternalTransfers]
     * @param {string} [considerInvoiceRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerList(workspaceId: string, pageIndex?: number, pageSize?: number, accountIds?: string, categoryIds?: string, tagIds?: string, legalNatures?: string, directionNatures?: string, minPostedDatetime?: string, maxPostedDatetime?: string, minCompetencyDatetime?: string, maxCompetencyDatetime?: string, considerIgnored?: boolean, considerAutomaticApplicationRelated?: boolean, considerInternalTransfers?: boolean, considerInvoiceRelated?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BankTransactionsPageEntity>>;
    /**
     *
     * @param {string} workspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerListMostRecent(workspaceId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<BankTransactionEntity>>>;
    /**
     *
     * @param {string} workspaceId
     * @param {number} [pageIndex]
     * @param {number} [pageSize]
     * @param {boolean} [considerIgnored]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerListNotVerified(workspaceId: string, pageIndex?: number, pageSize?: number, considerIgnored?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BankTransactionsPageEntity>>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} fromDatetime
     * @param {string} toDatetime
     * @param {number} [pageIndex]
     * @param {number} [pageSize]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerListVerifiedByMe(workspaceId: string, fromDatetime: string, toDatetime: string, pageIndex?: number, pageSize?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BankTransactionsPageEntity>>;
    /**
     *
     * @param {string} bankTransactionId
     * @param {PartialUpdateBankTransactionRequestDto} partialUpdateBankTransactionRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerPartialUpdate(bankTransactionId: string, partialUpdateBankTransactionRequestDto: PartialUpdateBankTransactionRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BankTransactionEntity>>;
};
/**
 * BankTransactionsApi - factory interface
 * @export
 */
export declare const BankTransactionsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {CreateOrUpdateBankTransactionsInBulkRequestDto} createOrUpdateBankTransactionsInBulkRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerCreateOrUpdateInBulk(createOrUpdateBankTransactionsInBulkRequestDto: CreateOrUpdateBankTransactionsInBulkRequestDto, options?: any): AxiosPromise<Array<BankTransactionEntity>>;
    /**
     *
     * @param {string} bankTransactionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerGetById(bankTransactionId: string, options?: any): AxiosPromise<BankTransactionEntity>;
    /**
     *
     * @param {string} accountId
     * @param {string} provider
     * @param {string} providerTransactionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerGetByProvider(accountId: string, provider: string, providerTransactionId: string, options?: any): AxiosPromise<BankTransactionEntity>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [categoryIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {string} [directionNatures]
     * @param {string} [minPostedDatetime]
     * @param {string} [maxPostedDatetime]
     * @param {string} [minCompetencyDatetime]
     * @param {string} [maxCompetencyDatetime]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [considerAutomaticApplicationRelated]
     * @param {boolean} [considerInternalTransfers]
     * @param {string} [considerInvoiceRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerGetTotals(workspaceId: string, accountIds?: string, categoryIds?: string, tagIds?: string, legalNatures?: string, directionNatures?: string, minPostedDatetime?: string, maxPostedDatetime?: string, minCompetencyDatetime?: string, maxCompetencyDatetime?: string, considerIgnored?: boolean, considerAutomaticApplicationRelated?: boolean, considerInternalTransfers?: boolean, considerInvoiceRelated?: string, options?: any): AxiosPromise<BankTransactionsPageEntity>;
    /**
     *
     * @param {string} workspaceId
     * @param {number} [pageIndex]
     * @param {number} [pageSize]
     * @param {string} [accountIds]
     * @param {string} [categoryIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {string} [directionNatures]
     * @param {string} [minPostedDatetime]
     * @param {string} [maxPostedDatetime]
     * @param {string} [minCompetencyDatetime]
     * @param {string} [maxCompetencyDatetime]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [considerAutomaticApplicationRelated]
     * @param {boolean} [considerInternalTransfers]
     * @param {string} [considerInvoiceRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerList(workspaceId: string, pageIndex?: number, pageSize?: number, accountIds?: string, categoryIds?: string, tagIds?: string, legalNatures?: string, directionNatures?: string, minPostedDatetime?: string, maxPostedDatetime?: string, minCompetencyDatetime?: string, maxCompetencyDatetime?: string, considerIgnored?: boolean, considerAutomaticApplicationRelated?: boolean, considerInternalTransfers?: boolean, considerInvoiceRelated?: string, options?: any): AxiosPromise<BankTransactionsPageEntity>;
    /**
     *
     * @param {string} workspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerListMostRecent(workspaceId: string, options?: any): AxiosPromise<Array<BankTransactionEntity>>;
    /**
     *
     * @param {string} workspaceId
     * @param {number} [pageIndex]
     * @param {number} [pageSize]
     * @param {boolean} [considerIgnored]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerListNotVerified(workspaceId: string, pageIndex?: number, pageSize?: number, considerIgnored?: boolean, options?: any): AxiosPromise<BankTransactionsPageEntity>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} fromDatetime
     * @param {string} toDatetime
     * @param {number} [pageIndex]
     * @param {number} [pageSize]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerListVerifiedByMe(workspaceId: string, fromDatetime: string, toDatetime: string, pageIndex?: number, pageSize?: number, options?: any): AxiosPromise<BankTransactionsPageEntity>;
    /**
     *
     * @param {string} bankTransactionId
     * @param {PartialUpdateBankTransactionRequestDto} partialUpdateBankTransactionRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsControllerPartialUpdate(bankTransactionId: string, partialUpdateBankTransactionRequestDto: PartialUpdateBankTransactionRequestDto, options?: any): AxiosPromise<BankTransactionEntity>;
};
/**
 * BankTransactionsApi - object-oriented interface
 * @export
 * @class BankTransactionsApi
 * @extends {BaseAPI}
 */
export declare class BankTransactionsApi extends BaseAPI {
    /**
     *
     * @param {CreateOrUpdateBankTransactionsInBulkRequestDto} createOrUpdateBankTransactionsInBulkRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankTransactionsApi
     */
    bankTransactionsControllerCreateOrUpdateInBulk(createOrUpdateBankTransactionsInBulkRequestDto: CreateOrUpdateBankTransactionsInBulkRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankTransactionEntity[], any>>;
    /**
     *
     * @param {string} bankTransactionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankTransactionsApi
     */
    bankTransactionsControllerGetById(bankTransactionId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankTransactionEntity, any>>;
    /**
     *
     * @param {string} accountId
     * @param {string} provider
     * @param {string} providerTransactionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankTransactionsApi
     */
    bankTransactionsControllerGetByProvider(accountId: string, provider: string, providerTransactionId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankTransactionEntity, any>>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [categoryIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {string} [directionNatures]
     * @param {string} [minPostedDatetime]
     * @param {string} [maxPostedDatetime]
     * @param {string} [minCompetencyDatetime]
     * @param {string} [maxCompetencyDatetime]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [considerAutomaticApplicationRelated]
     * @param {boolean} [considerInternalTransfers]
     * @param {string} [considerInvoiceRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankTransactionsApi
     */
    bankTransactionsControllerGetTotals(workspaceId: string, accountIds?: string, categoryIds?: string, tagIds?: string, legalNatures?: string, directionNatures?: string, minPostedDatetime?: string, maxPostedDatetime?: string, minCompetencyDatetime?: string, maxCompetencyDatetime?: string, considerIgnored?: boolean, considerAutomaticApplicationRelated?: boolean, considerInternalTransfers?: boolean, considerInvoiceRelated?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankTransactionsPageEntity, any>>;
    /**
     *
     * @param {string} workspaceId
     * @param {number} [pageIndex]
     * @param {number} [pageSize]
     * @param {string} [accountIds]
     * @param {string} [categoryIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {string} [directionNatures]
     * @param {string} [minPostedDatetime]
     * @param {string} [maxPostedDatetime]
     * @param {string} [minCompetencyDatetime]
     * @param {string} [maxCompetencyDatetime]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [considerAutomaticApplicationRelated]
     * @param {boolean} [considerInternalTransfers]
     * @param {string} [considerInvoiceRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankTransactionsApi
     */
    bankTransactionsControllerList(workspaceId: string, pageIndex?: number, pageSize?: number, accountIds?: string, categoryIds?: string, tagIds?: string, legalNatures?: string, directionNatures?: string, minPostedDatetime?: string, maxPostedDatetime?: string, minCompetencyDatetime?: string, maxCompetencyDatetime?: string, considerIgnored?: boolean, considerAutomaticApplicationRelated?: boolean, considerInternalTransfers?: boolean, considerInvoiceRelated?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankTransactionsPageEntity, any>>;
    /**
     *
     * @param {string} workspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankTransactionsApi
     */
    bankTransactionsControllerListMostRecent(workspaceId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankTransactionEntity[], any>>;
    /**
     *
     * @param {string} workspaceId
     * @param {number} [pageIndex]
     * @param {number} [pageSize]
     * @param {boolean} [considerIgnored]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankTransactionsApi
     */
    bankTransactionsControllerListNotVerified(workspaceId: string, pageIndex?: number, pageSize?: number, considerIgnored?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankTransactionsPageEntity, any>>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} fromDatetime
     * @param {string} toDatetime
     * @param {number} [pageIndex]
     * @param {number} [pageSize]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankTransactionsApi
     */
    bankTransactionsControllerListVerifiedByMe(workspaceId: string, fromDatetime: string, toDatetime: string, pageIndex?: number, pageSize?: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankTransactionsPageEntity, any>>;
    /**
     *
     * @param {string} bankTransactionId
     * @param {PartialUpdateBankTransactionRequestDto} partialUpdateBankTransactionRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankTransactionsApi
     */
    bankTransactionsControllerPartialUpdate(bankTransactionId: string, partialUpdateBankTransactionRequestDto: PartialUpdateBankTransactionRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankTransactionEntity, any>>;
}
/**
 * BankTransactionsPageCategoryAssignerApi - axios parameter creator
 * @export
 */
export declare const BankTransactionsPageCategoryAssignerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {AssignCategoryForBankTransactionsPageRequestDto} assignCategoryForBankTransactionsPageRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsPageCategoryAssignerControllerAssign: (assignCategoryForBankTransactionsPageRequestDto: AssignCategoryForBankTransactionsPageRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BankTransactionsPageCategoryAssignerApi - functional programming interface
 * @export
 */
export declare const BankTransactionsPageCategoryAssignerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {AssignCategoryForBankTransactionsPageRequestDto} assignCategoryForBankTransactionsPageRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsPageCategoryAssignerControllerAssign(assignCategoryForBankTransactionsPageRequestDto: AssignCategoryForBankTransactionsPageRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * BankTransactionsPageCategoryAssignerApi - factory interface
 * @export
 */
export declare const BankTransactionsPageCategoryAssignerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {AssignCategoryForBankTransactionsPageRequestDto} assignCategoryForBankTransactionsPageRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsPageCategoryAssignerControllerAssign(assignCategoryForBankTransactionsPageRequestDto: AssignCategoryForBankTransactionsPageRequestDto, options?: any): AxiosPromise<void>;
};
/**
 * BankTransactionsPageCategoryAssignerApi - object-oriented interface
 * @export
 * @class BankTransactionsPageCategoryAssignerApi
 * @extends {BaseAPI}
 */
export declare class BankTransactionsPageCategoryAssignerApi extends BaseAPI {
    /**
     *
     * @param {AssignCategoryForBankTransactionsPageRequestDto} assignCategoryForBankTransactionsPageRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankTransactionsPageCategoryAssignerApi
     */
    bankTransactionsPageCategoryAssignerControllerAssign(assignCategoryForBankTransactionsPageRequestDto: AssignCategoryForBankTransactionsPageRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * BankTransactionsPageLegalNatureAssignerApi - axios parameter creator
 * @export
 */
export declare const BankTransactionsPageLegalNatureAssignerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {AssignLegalNatureForBankTransactionsPageRequestDto} assignLegalNatureForBankTransactionsPageRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsPageLegalNatureAssignerControllerAssign: (assignLegalNatureForBankTransactionsPageRequestDto: AssignLegalNatureForBankTransactionsPageRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BankTransactionsPageLegalNatureAssignerApi - functional programming interface
 * @export
 */
export declare const BankTransactionsPageLegalNatureAssignerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {AssignLegalNatureForBankTransactionsPageRequestDto} assignLegalNatureForBankTransactionsPageRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsPageLegalNatureAssignerControllerAssign(assignLegalNatureForBankTransactionsPageRequestDto: AssignLegalNatureForBankTransactionsPageRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * BankTransactionsPageLegalNatureAssignerApi - factory interface
 * @export
 */
export declare const BankTransactionsPageLegalNatureAssignerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {AssignLegalNatureForBankTransactionsPageRequestDto} assignLegalNatureForBankTransactionsPageRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bankTransactionsPageLegalNatureAssignerControllerAssign(assignLegalNatureForBankTransactionsPageRequestDto: AssignLegalNatureForBankTransactionsPageRequestDto, options?: any): AxiosPromise<void>;
};
/**
 * BankTransactionsPageLegalNatureAssignerApi - object-oriented interface
 * @export
 * @class BankTransactionsPageLegalNatureAssignerApi
 * @extends {BaseAPI}
 */
export declare class BankTransactionsPageLegalNatureAssignerApi extends BaseAPI {
    /**
     *
     * @param {AssignLegalNatureForBankTransactionsPageRequestDto} assignLegalNatureForBankTransactionsPageRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankTransactionsPageLegalNatureAssignerApi
     */
    bankTransactionsPageLegalNatureAssignerControllerAssign(assignLegalNatureForBankTransactionsPageRequestDto: AssignLegalNatureForBankTransactionsPageRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * HelloApi - axios parameter creator
 * @export
 */
export declare const HelloApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    helloControllerHello: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * HelloApi - functional programming interface
 * @export
 */
export declare const HelloApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    helloControllerHello(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * HelloApi - factory interface
 * @export
 */
export declare const HelloApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    helloControllerHello(options?: any): AxiosPromise<void>;
};
/**
 * HelloApi - object-oriented interface
 * @export
 * @class HelloApi
 * @extends {BaseAPI}
 */
export declare class HelloApi extends BaseAPI {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HelloApi
     */
    helloControllerHello(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * MessageTokensApi - axios parameter creator
 * @export
 */
export declare const MessageTokensApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} workspaceId
     * @param {CreateOrUpdateMessageTokenRequestDto} createOrUpdateMessageTokenRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    messageTokensControllerCreateOrUpdate: (workspaceId: string, createOrUpdateMessageTokenRequestDto: CreateOrUpdateMessageTokenRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} workspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    messageTokensControllerListByWorkspaceId: (workspaceId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * MessageTokensApi - functional programming interface
 * @export
 */
export declare const MessageTokensApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} workspaceId
     * @param {CreateOrUpdateMessageTokenRequestDto} createOrUpdateMessageTokenRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    messageTokensControllerCreateOrUpdate(workspaceId: string, createOrUpdateMessageTokenRequestDto: CreateOrUpdateMessageTokenRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MessageTokenEntity>>;
    /**
     *
     * @param {string} workspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    messageTokensControllerListByWorkspaceId(workspaceId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<MessageTokenEntity>>>;
};
/**
 * MessageTokensApi - factory interface
 * @export
 */
export declare const MessageTokensApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} workspaceId
     * @param {CreateOrUpdateMessageTokenRequestDto} createOrUpdateMessageTokenRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    messageTokensControllerCreateOrUpdate(workspaceId: string, createOrUpdateMessageTokenRequestDto: CreateOrUpdateMessageTokenRequestDto, options?: any): AxiosPromise<MessageTokenEntity>;
    /**
     *
     * @param {string} workspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    messageTokensControllerListByWorkspaceId(workspaceId: string, options?: any): AxiosPromise<Array<MessageTokenEntity>>;
};
/**
 * MessageTokensApi - object-oriented interface
 * @export
 * @class MessageTokensApi
 * @extends {BaseAPI}
 */
export declare class MessageTokensApi extends BaseAPI {
    /**
     *
     * @param {string} workspaceId
     * @param {CreateOrUpdateMessageTokenRequestDto} createOrUpdateMessageTokenRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MessageTokensApi
     */
    messageTokensControllerCreateOrUpdate(workspaceId: string, createOrUpdateMessageTokenRequestDto: CreateOrUpdateMessageTokenRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<MessageTokenEntity, any>>;
    /**
     *
     * @param {string} workspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MessageTokensApi
     */
    messageTokensControllerListByWorkspaceId(workspaceId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<MessageTokenEntity[], any>>;
}
/**
 * PluggyApi - axios parameter creator
 * @export
 */
export declare const PluggyApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {CreatePluggyConnectTokenRequestDto} createPluggyConnectTokenRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pluggyControllerCreateConnectToken: (createPluggyConnectTokenRequestDto: CreatePluggyConnectTokenRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pluggyControllerWebhook: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PluggyApi - functional programming interface
 * @export
 */
export declare const PluggyApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {CreatePluggyConnectTokenRequestDto} createPluggyConnectTokenRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pluggyControllerCreateConnectToken(createPluggyConnectTokenRequestDto: CreatePluggyConnectTokenRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PluggyConnectTokenEntity>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pluggyControllerWebhook(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * PluggyApi - factory interface
 * @export
 */
export declare const PluggyApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {CreatePluggyConnectTokenRequestDto} createPluggyConnectTokenRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pluggyControllerCreateConnectToken(createPluggyConnectTokenRequestDto: CreatePluggyConnectTokenRequestDto, options?: any): AxiosPromise<PluggyConnectTokenEntity>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pluggyControllerWebhook(options?: any): AxiosPromise<void>;
};
/**
 * PluggyApi - object-oriented interface
 * @export
 * @class PluggyApi
 * @extends {BaseAPI}
 */
export declare class PluggyApi extends BaseAPI {
    /**
     *
     * @param {CreatePluggyConnectTokenRequestDto} createPluggyConnectTokenRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PluggyApi
     */
    pluggyControllerCreateConnectToken(createPluggyConnectTokenRequestDto: CreatePluggyConnectTokenRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PluggyConnectTokenEntity, any>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PluggyApi
     */
    pluggyControllerWebhook(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * ProfilesApi - axios parameter creator
 * @export
 */
export declare const ProfilesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {CreateProfileRequestDto} createProfileRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    profilesControllerCreate: (createProfileRequestDto: CreateProfileRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    profilesControllerGetMy: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {PartialUpdateProfileRequestDto} partialUpdateProfileRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    profilesControllerPartialUpdate: (partialUpdateProfileRequestDto: PartialUpdateProfileRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ProfilesApi - functional programming interface
 * @export
 */
export declare const ProfilesApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {CreateProfileRequestDto} createProfileRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    profilesControllerCreate(createProfileRequestDto: CreateProfileRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProfileEntity>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    profilesControllerGetMy(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProfileEntity>>;
    /**
     *
     * @param {PartialUpdateProfileRequestDto} partialUpdateProfileRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    profilesControllerPartialUpdate(partialUpdateProfileRequestDto: PartialUpdateProfileRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProfileEntity>>;
};
/**
 * ProfilesApi - factory interface
 * @export
 */
export declare const ProfilesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {CreateProfileRequestDto} createProfileRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    profilesControllerCreate(createProfileRequestDto: CreateProfileRequestDto, options?: any): AxiosPromise<ProfileEntity>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    profilesControllerGetMy(options?: any): AxiosPromise<ProfileEntity>;
    /**
     *
     * @param {PartialUpdateProfileRequestDto} partialUpdateProfileRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    profilesControllerPartialUpdate(partialUpdateProfileRequestDto: PartialUpdateProfileRequestDto, options?: any): AxiosPromise<ProfileEntity>;
};
/**
 * ProfilesApi - object-oriented interface
 * @export
 * @class ProfilesApi
 * @extends {BaseAPI}
 */
export declare class ProfilesApi extends BaseAPI {
    /**
     *
     * @param {CreateProfileRequestDto} createProfileRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProfilesApi
     */
    profilesControllerCreate(createProfileRequestDto: CreateProfileRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ProfileEntity, any>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProfilesApi
     */
    profilesControllerGetMy(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ProfileEntity, any>>;
    /**
     *
     * @param {PartialUpdateProfileRequestDto} partialUpdateProfileRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProfilesApi
     */
    profilesControllerPartialUpdate(partialUpdateProfileRequestDto: PartialUpdateProfileRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ProfileEntity, any>>;
}
/**
 * ReportsApi - axios parameter creator
 * @export
 */
export declare const ReportsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [ignoreInternalTransfers]
     * @param {boolean} [ignoreAutomaticApplicationRelated]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetAccountsEntriesByCategoryReport: (workspaceId: string, accountIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, ignoreInternalTransfers?: boolean, ignoreAutomaticApplicationRelated?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [ignoreInternalTransfers]
     * @param {boolean} [ignoreAutomaticApplicationRelated]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetAccountsOutputsByCategoryReport: (workspaceId: string, accountIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, ignoreInternalTransfers?: boolean, ignoreAutomaticApplicationRelated?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {boolean} [considerIgnored]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetBusinessIndicators: (workspaceId: string, accountIds?: string, tagIds?: string, considerIgnored?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [categoryIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [ignoreInvoiceRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetCardsCashFlowReport: (workspaceId: string, accountIds?: string, categoryIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, ignoreInvoiceRelated?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {boolean} [ignoreInvoiceRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetCardsOutputsByCategoryReport: (workspaceId: string, accountIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, ignoreInvoiceRelated?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [categoryIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [ignoreInternalTransfers]
     * @param {boolean} [ignoreAutomaticApplicationRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetCashFlowReport: (workspaceId: string, accountIds?: string, categoryIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, ignoreInternalTransfers?: boolean, ignoreAutomaticApplicationRelated?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetFinancialStatementReport: (workspaceId: string, accountIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ReportsApi - functional programming interface
 * @export
 */
export declare const ReportsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [ignoreInternalTransfers]
     * @param {boolean} [ignoreAutomaticApplicationRelated]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetAccountsEntriesByCategoryReport(workspaceId: string, accountIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, ignoreInternalTransfers?: boolean, ignoreAutomaticApplicationRelated?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CashFlowByCategoryReportEntity>>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [ignoreInternalTransfers]
     * @param {boolean} [ignoreAutomaticApplicationRelated]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetAccountsOutputsByCategoryReport(workspaceId: string, accountIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, ignoreInternalTransfers?: boolean, ignoreAutomaticApplicationRelated?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CashFlowByCategoryReportEntity>>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {boolean} [considerIgnored]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetBusinessIndicators(workspaceId: string, accountIds?: string, tagIds?: string, considerIgnored?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<BankTransactionIndicatorEntity>>>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [categoryIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [ignoreInvoiceRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetCardsCashFlowReport(workspaceId: string, accountIds?: string, categoryIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, ignoreInvoiceRelated?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CashFlowReportEntity>>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {boolean} [ignoreInvoiceRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetCardsOutputsByCategoryReport(workspaceId: string, accountIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, ignoreInvoiceRelated?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CashFlowByCategoryReportEntity>>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [categoryIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [ignoreInternalTransfers]
     * @param {boolean} [ignoreAutomaticApplicationRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetCashFlowReport(workspaceId: string, accountIds?: string, categoryIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, ignoreInternalTransfers?: boolean, ignoreAutomaticApplicationRelated?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CashFlowReportEntity>>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetFinancialStatementReport(workspaceId: string, accountIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FinancialStatementReport>>;
};
/**
 * ReportsApi - factory interface
 * @export
 */
export declare const ReportsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [ignoreInternalTransfers]
     * @param {boolean} [ignoreAutomaticApplicationRelated]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetAccountsEntriesByCategoryReport(workspaceId: string, accountIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, ignoreInternalTransfers?: boolean, ignoreAutomaticApplicationRelated?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, options?: any): AxiosPromise<CashFlowByCategoryReportEntity>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [ignoreInternalTransfers]
     * @param {boolean} [ignoreAutomaticApplicationRelated]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetAccountsOutputsByCategoryReport(workspaceId: string, accountIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, ignoreInternalTransfers?: boolean, ignoreAutomaticApplicationRelated?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, options?: any): AxiosPromise<CashFlowByCategoryReportEntity>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {boolean} [considerIgnored]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetBusinessIndicators(workspaceId: string, accountIds?: string, tagIds?: string, considerIgnored?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, options?: any): AxiosPromise<Array<BankTransactionIndicatorEntity>>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [categoryIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [ignoreInvoiceRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetCardsCashFlowReport(workspaceId: string, accountIds?: string, categoryIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, ignoreInvoiceRelated?: boolean, options?: any): AxiosPromise<CashFlowReportEntity>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {boolean} [ignoreInvoiceRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetCardsOutputsByCategoryReport(workspaceId: string, accountIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, ignoreInvoiceRelated?: boolean, options?: any): AxiosPromise<CashFlowByCategoryReportEntity>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [categoryIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [ignoreInternalTransfers]
     * @param {boolean} [ignoreAutomaticApplicationRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetCashFlowReport(workspaceId: string, accountIds?: string, categoryIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, ignoreInternalTransfers?: boolean, ignoreAutomaticApplicationRelated?: boolean, options?: any): AxiosPromise<CashFlowReportEntity>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reportsControllerGetFinancialStatementReport(workspaceId: string, accountIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, options?: any): AxiosPromise<FinancialStatementReport>;
};
/**
 * ReportsApi - object-oriented interface
 * @export
 * @class ReportsApi
 * @extends {BaseAPI}
 */
export declare class ReportsApi extends BaseAPI {
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [ignoreInternalTransfers]
     * @param {boolean} [ignoreAutomaticApplicationRelated]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReportsApi
     */
    reportsControllerGetAccountsEntriesByCategoryReport(workspaceId: string, accountIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, ignoreInternalTransfers?: boolean, ignoreAutomaticApplicationRelated?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CashFlowByCategoryReportEntity, any>>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [ignoreInternalTransfers]
     * @param {boolean} [ignoreAutomaticApplicationRelated]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReportsApi
     */
    reportsControllerGetAccountsOutputsByCategoryReport(workspaceId: string, accountIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, ignoreInternalTransfers?: boolean, ignoreAutomaticApplicationRelated?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CashFlowByCategoryReportEntity, any>>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {boolean} [considerIgnored]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReportsApi
     */
    reportsControllerGetBusinessIndicators(workspaceId: string, accountIds?: string, tagIds?: string, considerIgnored?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BankTransactionIndicatorEntity[], any>>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [categoryIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [ignoreInvoiceRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReportsApi
     */
    reportsControllerGetCardsCashFlowReport(workspaceId: string, accountIds?: string, categoryIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, ignoreInvoiceRelated?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CashFlowReportEntity, any>>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {boolean} [ignoreInvoiceRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReportsApi
     */
    reportsControllerGetCardsOutputsByCategoryReport(workspaceId: string, accountIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, ignoreInvoiceRelated?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CashFlowByCategoryReportEntity, any>>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [categoryIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {boolean} [ignoreInternalTransfers]
     * @param {boolean} [ignoreAutomaticApplicationRelated]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReportsApi
     */
    reportsControllerGetCashFlowReport(workspaceId: string, accountIds?: string, categoryIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, ignoreInternalTransfers?: boolean, ignoreAutomaticApplicationRelated?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CashFlowReportEntity, any>>;
    /**
     *
     * @param {string} workspaceId
     * @param {string} [accountIds]
     * @param {string} [tagIds]
     * @param {string} [legalNatures]
     * @param {boolean} [considerIgnored]
     * @param {string} [minPostedDate]
     * @param {string} [maxPostedDate]
     * @param {string} [minCompetencyDate]
     * @param {string} [maxCompetencyDate]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReportsApi
     */
    reportsControllerGetFinancialStatementReport(workspaceId: string, accountIds?: string, tagIds?: string, legalNatures?: string, considerIgnored?: boolean, minPostedDate?: string, maxPostedDate?: string, minCompetencyDate?: string, maxCompetencyDate?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FinancialStatementReport, any>>;
}
/**
 * WorkspacesApi - axios parameter creator
 * @export
 */
export declare const WorkspacesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {CreateWorkspaceRequestDto} createWorkspaceRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    workspacesControllerCreate: (createWorkspaceRequestDto: CreateWorkspaceRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} workspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    workspacesControllerGetById: (workspaceId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    workspacesControllerListMy: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} workspaceId
     * @param {PartialUpdateWorkspaceRequestDto} partialUpdateWorkspaceRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    workspacesControllerPartialUpdate: (workspaceId: string, partialUpdateWorkspaceRequestDto: PartialUpdateWorkspaceRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * WorkspacesApi - functional programming interface
 * @export
 */
export declare const WorkspacesApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {CreateWorkspaceRequestDto} createWorkspaceRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    workspacesControllerCreate(createWorkspaceRequestDto: CreateWorkspaceRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<WorkspaceEntity>>;
    /**
     *
     * @param {string} workspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    workspacesControllerGetById(workspaceId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<WorkspaceEntity>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    workspacesControllerListMy(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<UserRelatedWorkspaceEntity>>>;
    /**
     *
     * @param {string} workspaceId
     * @param {PartialUpdateWorkspaceRequestDto} partialUpdateWorkspaceRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    workspacesControllerPartialUpdate(workspaceId: string, partialUpdateWorkspaceRequestDto: PartialUpdateWorkspaceRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<WorkspaceEntity>>;
};
/**
 * WorkspacesApi - factory interface
 * @export
 */
export declare const WorkspacesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {CreateWorkspaceRequestDto} createWorkspaceRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    workspacesControllerCreate(createWorkspaceRequestDto: CreateWorkspaceRequestDto, options?: any): AxiosPromise<WorkspaceEntity>;
    /**
     *
     * @param {string} workspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    workspacesControllerGetById(workspaceId: string, options?: any): AxiosPromise<WorkspaceEntity>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    workspacesControllerListMy(options?: any): AxiosPromise<Array<UserRelatedWorkspaceEntity>>;
    /**
     *
     * @param {string} workspaceId
     * @param {PartialUpdateWorkspaceRequestDto} partialUpdateWorkspaceRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    workspacesControllerPartialUpdate(workspaceId: string, partialUpdateWorkspaceRequestDto: PartialUpdateWorkspaceRequestDto, options?: any): AxiosPromise<WorkspaceEntity>;
};
/**
 * WorkspacesApi - object-oriented interface
 * @export
 * @class WorkspacesApi
 * @extends {BaseAPI}
 */
export declare class WorkspacesApi extends BaseAPI {
    /**
     *
     * @param {CreateWorkspaceRequestDto} createWorkspaceRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WorkspacesApi
     */
    workspacesControllerCreate(createWorkspaceRequestDto: CreateWorkspaceRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<WorkspaceEntity, any>>;
    /**
     *
     * @param {string} workspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WorkspacesApi
     */
    workspacesControllerGetById(workspaceId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<WorkspaceEntity, any>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WorkspacesApi
     */
    workspacesControllerListMy(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<UserRelatedWorkspaceEntity[], any>>;
    /**
     *
     * @param {string} workspaceId
     * @param {PartialUpdateWorkspaceRequestDto} partialUpdateWorkspaceRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WorkspacesApi
     */
    workspacesControllerPartialUpdate(workspaceId: string, partialUpdateWorkspaceRequestDto: PartialUpdateWorkspaceRequestDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<WorkspaceEntity, any>>;
}
